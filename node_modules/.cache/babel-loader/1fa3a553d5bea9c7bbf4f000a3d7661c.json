{"ast":null,"code":"import _toConsumableArray from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"component\", \"roles\"];\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\src\\\\routes\\\\index.js\";\n\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport * as FeatherIcon from \"react-feather\";\nimport { isUserAuthenticated, getLoggedInUser } from \"../helpers/authUtils\"; // auth\n\nvar Login = React.lazy(function () {\n  return import(\"../pages/auth/Login\");\n});\nvar Logout = React.lazy(function () {\n  return import(\"../pages/auth/Logout\");\n});\nvar ForgetPassword = React.lazy(function () {\n  return import(\"../pages/auth/ForgetPassword\");\n}); // Khyber City\n\nvar KhyberCitySales = React.lazy(function () {\n  return import(\"../pages/khyberCity/Sales/Sales\");\n});\nvar KhyberCityExpenses = React.lazy(function () {\n  return import(\"../pages/khyberCity/Expenses/Expenses\");\n});\nvar KhyberCityPlots = React.lazy(function () {\n  return import(\"../pages/khyberCity/Plots/Plots\");\n});\nvar KhyberCityCustomers = React.lazy(function () {\n  return import(\"../pages/khyberCity/Customers/Customers\");\n});\nvar KhyberCityTransferRequests = React.lazy(function () {\n  return import(\"../pages/khyberCity/TransferRequests/TransferRequests\");\n});\nvar KhyberCityDealers = React.lazy(function () {\n  return import(\"../pages/khyberCity/Dealers/Dealers\");\n});\nvar KhyberCityEmployees = React.lazy(function () {\n  return import(\"../pages/khyberCity/Employees/Employees\");\n});\nvar KhyberCityAttendance = React.lazy(function () {\n  return import(\"../pages/khyberCity/Attendance/Attendance\");\n}); // handle auth and authorization\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      roles = _ref.roles,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      if (!isUserAuthenticated()) {\n        // not logged in so redirect to login page with the return url\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/account/login\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }\n        });\n      }\n\n      var loggedInUser = getLoggedInUser(); // check if route is restricted by role\n\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        });\n      } // authorised so return component\n\n\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n}; // root routes\n\n\nvar rootRoute = {\n  path: \"/\",\n  exact: true,\n  component: function component() {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/khyberCity/sales\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }\n    });\n  },\n  route: PrivateRoute\n}; // Khyber City\n\nvar khyberCitySalesRoutes = {\n  path: \"/khyberCity/sales\",\n  name: \"Sales\",\n  header: \"Khyber City\",\n  icon: FeatherIcon.BarChart,\n  component: KhyberCitySales,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityExpensesRoutes = {\n  path: \"/khyberCity/expenses\",\n  name: \"Expenses\",\n  icon: FeatherIcon.DollarSign,\n  component: KhyberCityExpenses,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityPlotsRoutes = {\n  path: \"/khyberCity/plots\",\n  name: \"Plots\",\n  icon: FeatherIcon.Grid,\n  component: KhyberCityPlots,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityCustomersRoutes = {\n  path: \"/khyberCity/customers\",\n  name: \"Customers\",\n  icon: FeatherIcon.Users,\n  component: KhyberCityCustomers,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityTransferRequestsRoutes = {\n  path: \"/khyberCity/transferRequests\",\n  name: \"Transfer Requests\",\n  icon: FeatherIcon.RefreshCw,\n  component: KhyberCityTransferRequests,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityDealersRoutes = {\n  path: \"/khyberCity/dealers\",\n  name: \"Dealers\",\n  icon: FeatherIcon.Briefcase,\n  component: KhyberCityDealers,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityEmployeesRoutes = {\n  path: \"/khyberCity/employees\",\n  name: \"Employees\",\n  icon: FeatherIcon.User,\n  component: KhyberCityEmployees,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityAttendanceRoutes = {\n  path: \"/khyberCity/attendance\",\n  name: \"Attendance\",\n  icon: FeatherIcon.Calendar,\n  component: KhyberCityAttendance,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n};\nvar khyberCityRoutes = [khyberCitySalesRoutes, khyberCityExpensesRoutes, khyberCityPlotsRoutes, khyberCityCustomersRoutes, khyberCityTransferRequestsRoutes, khyberCityDealersRoutes, khyberCityEmployeesRoutes, khyberCityAttendanceRoutes]; // auth\n\nvar authRoutes = {\n  path: \"/account\",\n  name: \"Auth\",\n  children: [{\n    path: \"/account/login\",\n    name: \"Login\",\n    component: Login,\n    route: Route\n  }, {\n    path: \"/account/logout\",\n    name: \"Logout\",\n    component: Logout,\n    route: Route\n  }, {\n    path: \"/account/forget-password\",\n    name: \"Forget Password\",\n    component: ForgetPassword,\n    route: Route\n  }]\n}; // flatten the list of all nested routes\n\nvar flattenRoutes = function flattenRoutes(routes) {\n  var flatRoutes = [];\n  routes = routes || [];\n  routes.forEach(function (item) {\n    flatRoutes.push(item);\n\n    if (typeof item.children !== \"undefined\") {\n      flatRoutes = [].concat(_toConsumableArray(flatRoutes), _toConsumableArray(flattenRoutes(item.children)));\n    }\n  });\n  return flatRoutes;\n}; // All routes\n\n\nvar allRoutes = [rootRoute].concat(khyberCityRoutes, [authRoutes]);\nvar authProtectedRoutes = [].concat(khyberCityRoutes);\nvar allFlattenRoutes = flattenRoutes(allRoutes);\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };","map":{"version":3,"sources":["E:/Projects/tobesendtobiba11apr23/client/src/routes/index.js"],"names":["React","Redirect","Route","FeatherIcon","isUserAuthenticated","getLoggedInUser","Login","lazy","Logout","ForgetPassword","KhyberCitySales","KhyberCityExpenses","KhyberCityPlots","KhyberCityCustomers","KhyberCityTransferRequests","KhyberCityDealers","KhyberCityEmployees","KhyberCityAttendance","PrivateRoute","Component","component","roles","rest","props","pathname","state","from","location","loggedInUser","indexOf","role","rootRoute","path","exact","route","khyberCitySalesRoutes","name","header","icon","BarChart","khyberCityExpensesRoutes","DollarSign","khyberCityPlotsRoutes","Grid","khyberCityCustomersRoutes","Users","khyberCityTransferRequestsRoutes","RefreshCw","khyberCityDealersRoutes","Briefcase","khyberCityEmployeesRoutes","User","khyberCityAttendanceRoutes","Calendar","khyberCityRoutes","authRoutes","children","flattenRoutes","routes","flatRoutes","forEach","item","push","allRoutes","authProtectedRoutes","allFlattenRoutes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport * as FeatherIcon from \"react-feather\";\n\nimport { isUserAuthenticated, getLoggedInUser } from \"../helpers/authUtils\";\n\n// auth\nconst Login = React.lazy(() => import(\"../pages/auth/Login\"));\nconst Logout = React.lazy(() => import(\"../pages/auth/Logout\"));\nconst ForgetPassword = React.lazy(() => import(\"../pages/auth/ForgetPassword\"));\n\n// Khyber City\nconst KhyberCitySales = React.lazy(() => import(\"../pages/khyberCity/Sales/Sales\"));\nconst KhyberCityExpenses = React.lazy(() => import(\"../pages/khyberCity/Expenses/Expenses\"));\nconst KhyberCityPlots = React.lazy(() => import(\"../pages/khyberCity/Plots/Plots\"));\nconst KhyberCityCustomers = React.lazy(() => import(\"../pages/khyberCity/Customers/Customers\"));\nconst KhyberCityTransferRequests = React.lazy(() => import(\"../pages/khyberCity/TransferRequests/TransferRequests\"));\nconst KhyberCityDealers = React.lazy(() => import(\"../pages/khyberCity/Dealers/Dealers\"));\nconst KhyberCityEmployees = React.lazy(() => import(\"../pages/khyberCity/Employees/Employees\"));\nconst KhyberCityAttendance = React.lazy(() => import(\"../pages/khyberCity/Attendance/Attendance\"));\n\n// handle auth and authorization\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: \"/account/login\", state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: \"/\" }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: \"/\",\n    exact: true,\n    component: () => <Redirect to=\"/khyberCity/sales\" />,\n    route: PrivateRoute,\n};\n\n// Khyber City\nconst khyberCitySalesRoutes = {\n    path: \"/khyberCity/sales\",\n    name: \"Sales\",\n    header: \"Khyber City\",\n    icon: FeatherIcon.BarChart,\n    component: KhyberCitySales,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityExpensesRoutes = {\n    path: \"/khyberCity/expenses\",\n    name: \"Expenses\",\n    icon: FeatherIcon.DollarSign,\n    component: KhyberCityExpenses,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityPlotsRoutes = {\n    path: \"/khyberCity/plots\",\n    name: \"Plots\",\n    icon: FeatherIcon.Grid,\n    component: KhyberCityPlots,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityCustomersRoutes = {\n    path: \"/khyberCity/customers\",\n    name: \"Customers\",\n    icon: FeatherIcon.Users,\n    component: KhyberCityCustomers,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityTransferRequestsRoutes = {\n    path: \"/khyberCity/transferRequests\",\n    name: \"Transfer Requests\",\n    icon: FeatherIcon.RefreshCw,\n    component: KhyberCityTransferRequests,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityDealersRoutes = {\n    path: \"/khyberCity/dealers\",\n    name: \"Dealers\",\n    icon: FeatherIcon.Briefcase,\n    component: KhyberCityDealers,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityEmployeesRoutes = {\n    path: \"/khyberCity/employees\",\n    name: \"Employees\",\n    icon: FeatherIcon.User,\n    component: KhyberCityEmployees,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityAttendanceRoutes = {\n    path: \"/khyberCity/attendance\",\n    name: \"Attendance\",\n    icon: FeatherIcon.Calendar,\n    component: KhyberCityAttendance,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityRoutes = [\n    khyberCitySalesRoutes, \n    khyberCityExpensesRoutes, \n    khyberCityPlotsRoutes, \n    khyberCityCustomersRoutes, \n    khyberCityTransferRequestsRoutes,\n    khyberCityDealersRoutes,\n    khyberCityEmployeesRoutes,\n    khyberCityAttendanceRoutes,\n ];\n\n// auth\nconst authRoutes = {\n    path: \"/account\",\n    name: \"Auth\",\n    children: [\n        {\n            path: \"/account/login\",\n            name: \"Login\",\n            component: Login,\n            route: Route,\n        },\n        {\n            path: \"/account/logout\",\n            name: \"Logout\",\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: \"/account/forget-password\",\n            name: \"Forget Password\",\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== \"undefined\") {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n    rootRoute,\n    ...khyberCityRoutes, \n    authRoutes,\n];\n\nconst authProtectedRoutes = [ ...khyberCityRoutes ];\nconst allFlattenRoutes = flattenRoutes(allRoutes);\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n"]},"metadata":{},"sourceType":"module"}