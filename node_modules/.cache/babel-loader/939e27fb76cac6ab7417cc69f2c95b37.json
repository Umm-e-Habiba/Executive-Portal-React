{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\src\\\\pages\\\\khyberCity\\\\Expenses\\\\Expenses.js\";\n\nimport React from \"react\";\nimport Flatpickr from \"react-flatpickr\";\nimport { Row, Col, Card, CardBody, Button, Media, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Container, Input } from \"reactstrap\";\nimport axios from \"axios\";\nimport DonutChart from \"./DonutChart\";\nimport PageTitle from '../../../components/PageTitle';\nimport Preloader from \"../../../components/Preloader\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search, CSVExport } from \"react-bootstrap-table2-toolkit\";\nimport NoDataSVG from \"../../../assets/images/no-data.svg\";\nvar columns = [{\n  dataField: \"ID\",\n  text: \"ID\",\n  hidden: true\n}, {\n  dataField: \"Date\",\n  text: \"Date\",\n  sort: true\n}, {\n  dataField: \"Amount\",\n  text: \"Amount\",\n  sort: true\n}, {\n  dataField: \"Type\",\n  text: \"Type\",\n  sort: true\n}, {\n  dataField: \"ExpenseBy\",\n  text: \"Expense By\",\n  sort: false\n}, {\n  dataField: \"Description\",\n  text: \"Description\",\n  sort: false\n}];\n\nfunction ToTitleCase(string) {\n  var splitString = string.toLowerCase().split(\" \");\n\n  for (var i = 0; i < splitString.length; ++i) {\n    splitString[i] = splitString[i].charAt(0).toUpperCase() + splitString[i].substring(1);\n  }\n\n  return splitString.join(\" \");\n}\n\nvar ExpenseLogsTable = function ExpenseLogsTable(props) {\n  var SearchBar = Search.SearchBar;\n  var ExportCSVButton = CSVExport.ExportCSVButton;\n  var expenseLogs = props.expenseLogs,\n      columns = props.columns;\n  return /*#__PURE__*/React.createElement(ToolkitProvider, {\n    bootstrap4: true,\n    keyField: \"ID\",\n    data: expenseLogs,\n    columns: columns,\n    search: true,\n    exportCSV: {\n      onlyExportFiltered: true,\n      exportAll: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSVButton, Object.assign({}, props.csvProps, {\n      className: \"btn btn-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }), \"Export CSV\"))), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n      pagination: paginationFactory({\n        paginationSize: 5,\n        pageStartIndex: 1,\n        firstPageText: \"First\",\n        prePageText: \"Back\",\n        nextPageText: \"Next\",\n        lastPageText: \"Last\",\n        nextPageTitle: \"First page\",\n        prePageTitle: \"Pre page\",\n        firstPageTitle: \"Next page\",\n        lastPageTitle: \"Last page\",\n        showTotal: true,\n        paginationTotalRenderer: function paginationTotalRenderer(from, to, size) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"react-bootstrap-table-pagination-total ml-4\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }\n          }, \"Showing \", from.toLocaleString(), \" to \", to.toLocaleString(), \" of \", size.toLocaleString(), \" Results\");\n        },\n        sizePerPageRenderer: function sizePerPageRenderer(_ref) {\n          var options = _ref.options,\n              currentSizePerPage = _ref.currSizePerPage,\n              onSizePerPageChange = _ref.onSizePerPageChange;\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            className: \"d-inline mr-1\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }\n          }, \"Show\"), /*#__PURE__*/React.createElement(Input, {\n            type: \"select\",\n            name: \"select\",\n            id: \"no-entries\",\n            className: \"custom-select custom-select-sm d-inline col-1\",\n            defaultValue: currentSizePerPage,\n            onChange: function onChange(event) {\n              return onSizePerPageChange(event.target.value);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 41\n            }\n          }, options.map(function (option, index) {\n            return /*#__PURE__*/React.createElement(\"option\", {\n              key: index,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 60\n              }\n            }, option.text);\n          })), /*#__PURE__*/React.createElement(\"label\", {\n            className: \"d-inline ml-1\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 41\n            }\n          }, \"entries\"));\n        },\n        sizePerPageList: [{\n          text: \"5\",\n          value: 5\n        }, {\n          text: \"10\",\n          value: 10\n        }, {\n          text: \"15\",\n          value: 15\n        }, {\n          text: \"20\",\n          value: 20\n        }]\n      }),\n      wrapperClasses: \"table-responsive\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })));\n  });\n};\n\nvar Expenses = /*#__PURE__*/function (_React$Component) {\n  _inherits(Expenses, _React$Component);\n\n  var _super = _createSuper(Expenses);\n\n  function Expenses(props) {\n    var _this2;\n\n    _classCallCheck(this, Expenses);\n\n    _this2 = _super.call(this, props);\n\n    _this2.toggle = function (index) {\n      var ShowModals = _this2.state.ShowModals;\n      ShowModals[index] = !ShowModals[index];\n\n      _this2.setState({\n        ShowModals: ShowModals\n      });\n\n      _this2.setExpenses = _this2.setExpenses.bind(_assertThisInitialized(_this2));\n    };\n\n    _this2.setExpenses = function (rawExpenses) {\n      var expenses = [];\n\n      var categories = _toConsumableArray(new Set(rawExpenses.map(function (row) {\n        return row.Category;\n      })));\n\n      var _iterator = _createForOfIteratorHelper(categories),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var category = _step.value;\n          var categoryRows = rawExpenses.filter(function (row) {\n            return row.Category === category;\n          });\n\n          var types = _toConsumableArray(new Set(categoryRows.map(function (categoryRow) {\n            return categoryRow.Type;\n          })));\n\n          var expenseTypes = [];\n\n          var _iterator2 = _createForOfIteratorHelper(types),\n              _step2;\n\n          try {\n            var _loop2 = function _loop2() {\n              var type = _step2.value;\n              var typeRows = categoryRows.filter(function (categoryRow) {\n                return categoryRow.Type === type;\n              });\n              expenseTypes.push({\n                Type: type,\n                Amount: typeRows.reduce(function (sum, typeRow) {\n                  return sum + typeRow.Amount;\n                }, 0)\n              });\n            };\n\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              _loop2();\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          var totalAmount = categoryRows.reduce(function (sum, categoryRow) {\n            return sum + categoryRow.Amount;\n          }, 0);\n          var expenseLogs = categoryRows.map(function (categoryRow) {\n            return {\n              ID: categoryRow.ID,\n              Description: categoryRow.Description,\n              Amount: \"Rs. \".concat(categoryRow.Amount.toLocaleString()),\n              ExpenseBy: ToTitleCase(categoryRow.ExpenseBy),\n              Date: new Date(categoryRow.Date).toLocaleDateString(),\n              Type: categoryRow.Type\n            };\n          });\n          rawExpenses.filter(function (row) {\n            return row.Category === category;\n          });\n          expenses.push({\n            Name: category,\n            TotalAmount: totalAmount,\n            ExpenseLogs: expenseLogs,\n            ExpenseTypes: expenseTypes\n          });\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var showModals = [];\n      showModals.fill(false, 0, expenses.length);\n\n      _this2.setState({\n        Expenses: expenses,\n        ShowModals: showModals\n      });\n    };\n\n    _this2.onFilter = function () {\n      var _this2$state = _this2.state,\n          RawExpenses = _this2$state.RawExpenses,\n          DateRange = _this2$state.DateRange;\n\n      if (DateRange.length !== 2) {\n        return;\n      }\n\n      var filteredRawExpenses = [];\n      var fromTimestamp = new Date(DateRange[0]).getTime();\n      var toTimestamp = new Date(DateRange[1]).getTime();\n      var length = RawExpenses.length;\n\n      for (var i = 0; i < length; i++) {\n        var timeStamp = new Date(RawExpenses[i].Date).getTime();\n\n        if (timeStamp >= fromTimestamp && timeStamp <= toTimestamp) {\n          filteredRawExpenses.push(RawExpenses[i]);\n        }\n      }\n\n      console.log(filteredRawExpenses);\n\n      _this2.setExpenses(filteredRawExpenses);\n    };\n\n    var oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 365);\n    _this2.state = {\n      IsDataFetched: false,\n      IsDataFound: false,\n      RawExpenses: [],\n      Expenses: [],\n      ShowModals: [],\n      DateRange: [oneWeekAgo, new Date()]\n    };\n    _this2.toggle = _this2.toggle.bind(_assertThisInitialized(_this2));\n    _this2.onFilter = _this2.onFilter.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(Expenses, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, rawExpenses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(process.env.REACT_APP_SERVER_URL, \"/khyberCity/expenses\"));\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  IsDataFetched: true\n                });\n\n                if (response.data.Message === \"Data found.\") {\n                  rawExpenses = response.data.RawExpenses;\n                  this.setState({\n                    IsDataFound: true,\n                    RawExpenses: rawExpenses\n                  });\n\n                  if (rawExpenses.length > 0) {\n                    this.onFilter();\n                  } else {\n                    this.setState({\n                      Expenses: []\n                    });\n                  }\n                }\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.setState({\n                  IsDataFetched: true\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          IsDataFetched = _this$state.IsDataFetched,\n          IsDataFound = _this$state.IsDataFound,\n          RawExpenses = _this$state.RawExpenses,\n          _Expenses = _this$state.Expenses,\n          ShowModals = _this$state.ShowModals,\n          DateRange = _this$state.DateRange;\n      return IsDataFound ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        breadCrumbItems: [{\n          label: 'Khyber City',\n          path: '/khyberCity/sales'\n        }, {\n          label: 'Expenses',\n          path: '/khyberCity/expenses',\n          active: true\n        }],\n        title: \"Expenses\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }, \"Select Date Range\"), /*#__PURE__*/React.createElement(Form, {\n        inline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"mb-2 mr-sm-2 mb-sm-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Flatpickr, {\n        value: DateRange,\n        onChange: function onChange(date) {\n          _this3.setState({\n            DateRange: date\n          });\n        },\n        options: {\n          mode: \"range\"\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn-group ml-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: this.onFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, \"Filter\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-white\",\n        onClick: function onClick() {\n          _this3.setExpenses(RawExpenses);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }\n      }, \"All\"))))), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 9\n        }\n      }, \"Selected Range: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }, new Date(DateRange[0]).toLocaleString(\"default\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fas fa-arrow-right mx-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }\n      }, new Date(DateRange[1]).toLocaleString(\"default\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      }))), _Expenses.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }, _Expenses.map(function (expense, index) {\n        return /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardBody, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"header-title mt-0 mb-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 33\n          }\n        }, expense.Name), /*#__PURE__*/React.createElement(DonutChart, {\n          seriesLabels: expense.ExpenseTypes.map(function (expenseType) {\n            return expenseType.Type;\n          }),\n          seriesData: expense.ExpenseTypes.map(function (expenseType) {\n            return expenseType.Amount;\n          }),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 6,\n          xl: 6,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Media, {\n          className: \"p-3\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Media, {\n          body: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"text-muted text-uppercase font-size-12 font-weight-bold\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 49\n          }\n        }, \"Total Amount\"), /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"mb-2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 49\n          }\n        }, \"Rs. \".concat(expense.TotalAmount.toLocaleString())), /*#__PURE__*/React.createElement(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this3.toggle(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 49\n          }\n        }, \"View Expenses\"))))), /*#__PURE__*/React.createElement(Modal, {\n          isOpen: ShowModals[index],\n          toggle: function toggle() {\n            return _this3.toggle(index);\n          },\n          size: \"xl\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(ModalHeader, {\n          toggle: function toggle() {\n            return _this3.toggle(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 37\n          }\n        }, expense.Name), /*#__PURE__*/React.createElement(ModalBody, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"card-title header-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 41\n          }\n        }, \"Total Amount\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-info font-weight-bold\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 41\n          }\n        }, \"Rs. \".concat(expense.TotalAmount.toLocaleString())), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"card-title header-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 41\n          }\n        }, \"Expense Logs\", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-info ml-2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 57\n          }\n        }, expense.ExpenseLogs.length.toLocaleString())), /*#__PURE__*/React.createElement(ExpenseLogsTable, {\n          expenseLogs: expense.ExpenseLogs,\n          columns: columns,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 41\n          }\n        })), /*#__PURE__*/React.createElement(ModalFooter, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"secondary\",\n          className: \"ml-1\",\n          onClick: function onClick() {\n            return _this3.toggle(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 41\n          }\n        }, \"Cancel\"))))));\n      }))) : /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 4,\n        lg: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: NoDataSVG,\n        alt: \"\",\n        className: \"img-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }\n      }, \"No expenses found.\"))))) : /*#__PURE__*/React.createElement(Preloader, {\n        isDataFetched: IsDataFetched,\n        retryLink: \"/khyberCity/expenses\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 5\n        }\n      });\n    }\n  }]);\n\n  return Expenses;\n}(React.Component);\n\n;\nexport default Expenses;","map":{"version":3,"sources":["E:/Projects/tobesendtobiba11apr23/client/src/pages/khyberCity/Expenses/Expenses.js"],"names":["React","Flatpickr","Row","Col","Card","CardBody","Button","Media","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Container","Input","axios","DonutChart","PageTitle","Preloader","BootstrapTable","paginationFactory","ToolkitProvider","Search","CSVExport","columns","dataField","text","hidden","sort","ToTitleCase","string","splitString","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","ExpenseLogsTable","props","SearchBar","ExportCSVButton","expenseLogs","onlyExportFiltered","exportAll","searchProps","csvProps","baseProps","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","from","to","size","toLocaleString","sizePerPageRenderer","options","currentSizePerPage","currSizePerPage","onSizePerPageChange","event","target","value","map","option","index","sizePerPageList","Expenses","toggle","ShowModals","state","setState","setExpenses","bind","rawExpenses","expenses","categories","Set","row","Category","category","categoryRows","filter","types","categoryRow","Type","expenseTypes","type","typeRows","push","Amount","reduce","sum","typeRow","totalAmount","ID","Description","ExpenseBy","Date","toLocaleDateString","Name","TotalAmount","ExpenseLogs","ExpenseTypes","showModals","fill","onFilter","RawExpenses","DateRange","filteredRawExpenses","fromTimestamp","getTime","toTimestamp","timeStamp","console","log","oneWeekAgo","setDate","getDate","IsDataFetched","IsDataFound","get","process","env","REACT_APP_SERVER_URL","response","data","Message","label","path","active","date","mode","year","month","day","expense","expenseType","NoDataSVG","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SACIC,GADJ,EACSC,GADT,EACcC,IADd,EACoBC,QADpB,EAEIC,MAFJ,EAEYC,KAFZ,EAEmBC,KAFnB,EAE0BC,WAF1B,EAGIC,SAHJ,EAGeC,WAHf,EAIIC,IAJJ,EAIUC,SAJV,EAKIC,SALJ,EAKeC,KALf,QAK4B,YAL5B;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,IAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,gCAAnD;;AAIA,IAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,SAAS,EAAE,IADf;AAEIC,EAAAA,IAAI,EAAE,IAFV;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CADY,EAMZ;AACIF,EAAAA,SAAS,EAAE,MADf;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIE,EAAAA,IAAI,EAAE;AAHV,CANY,EAWZ;AACIH,EAAAA,SAAS,EAAE,QADf;AAEIC,EAAAA,IAAI,EAAE,QAFV;AAGIE,EAAAA,IAAI,EAAE;AAHV,CAXY,EAgBZ;AACIH,EAAAA,SAAS,EAAE,MADf;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIE,EAAAA,IAAI,EAAE;AAHV,CAhBY,EAqBZ;AACIH,EAAAA,SAAS,EAAE,WADf;AAEIC,EAAAA,IAAI,EAAE,YAFV;AAGIE,EAAAA,IAAI,EAAE;AAHV,CArBY,EA0BZ;AACIH,EAAAA,SAAS,EAAE,aADf;AAEIC,EAAAA,IAAI,EAAE,aAFV;AAGIE,EAAAA,IAAI,EAAE;AAHV,CA1BY,CAAhB;;AAiCA,SAASC,WAAT,CAAsBC,MAAtB,EAA8B;AAC1B,MAAIC,WAAW,GAAGD,MAAM,CAACE,WAAP,GAAqBC,KAArB,CAA2B,GAA3B,CAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACI,MAAhC,EAAwC,EAAED,CAA1C,EAA6C;AACzCH,IAAAA,WAAW,CAACG,CAAD,CAAX,GAAiBH,WAAW,CAACG,CAAD,CAAX,CAAeE,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCN,WAAW,CAACG,CAAD,CAAX,CAAeI,SAAf,CAAyB,CAAzB,CAA1D;AACH;;AAED,SAAOP,WAAW,CAACQ,IAAZ,CAAiB,GAAjB,CAAP;AACH;;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,MAAQC,SAAR,GAAsBpB,MAAtB,CAAQoB,SAAR;AACA,MAAQC,eAAR,GAA4BpB,SAA5B,CAAQoB,eAAR;AAEA,MACIC,WADJ,GAGIH,KAHJ,CACIG,WADJ;AAAA,MAEIpB,OAFJ,GAGIiB,KAHJ,CAEIjB,OAFJ;AAKA,sBAAO,oBAAC,eAAD;AACK,IAAA,UAAU,MADf;AAEK,IAAA,QAAQ,EAAC,IAFd;AAGK,IAAA,IAAI,EAAEoB,WAHX;AAIK,IAAA,OAAO,EAAEpB,OAJd;AAKK,IAAA,MAAM,MALX;AAMK,IAAA,SAAS,EAAE;AAAEqB,MAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOM,UAAAL,KAAK;AAAA,wBACF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD,oBAAeA,KAAK,CAACM,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ,eAII,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD,oBAAqBN,KAAK,CAACO,QAA3B;AAAqC,MAAA,SAAS,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAJJ,CADJ,eAYI,oBAAC,cAAD,oBACQP,KAAK,CAACQ,SADd;AAEI,MAAA,UAAU,EAAE7B,iBAAiB,CAAC;AAC1B8B,QAAAA,cAAc,EAAE,CADU;AAE1BC,QAAAA,cAAc,EAAE,CAFU;AAG1BC,QAAAA,aAAa,EAAE,OAHW;AAI1BC,QAAAA,WAAW,EAAE,MAJa;AAK1BC,QAAAA,YAAY,EAAE,MALY;AAM1BC,QAAAA,YAAY,EAAE,MANY;AAO1BC,QAAAA,aAAa,EAAE,YAPW;AAQ1BC,QAAAA,YAAY,EAAE,UARY;AAS1BC,QAAAA,cAAc,EAAE,WATU;AAU1BC,QAAAA,aAAa,EAAE,WAVW;AAW1BC,QAAAA,SAAS,EAAE,IAXe;AAY1BC,QAAAA,uBAAuB,EAAE,iCAACC,IAAD,EAAOC,EAAP,EAAWC,IAAX;AAAA,8BACrB;AAAM,YAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACaF,IAAI,CAACG,cAAL,EADb,UACwCF,EAAE,CAACE,cAAH,EADxC,UACiED,IAAI,CAACC,cAAL,EADjE,aADqB;AAAA,SAZC;AAiB1BC,QAAAA,mBAAmB,EAAE;AAAA,cAAGC,OAAH,QAAGA,OAAH;AAAA,cAA6BC,kBAA7B,QAAYC,eAAZ;AAAA,cAAiDC,mBAAjD,QAAiDA,mBAAjD;AAAA,8BACjB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAO,YAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,IAAI,EAAC,QAA1B;AAAmC,YAAA,EAAE,EAAC,YAAtC;AACI,YAAA,SAAS,EAAC,+CADd;AAEI,YAAA,YAAY,EAAEF,kBAFlB;AAGI,YAAA,QAAQ,EAAE,kBAACG,KAAD;AAAA,qBAAWD,mBAAmB,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9B;AAAA,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAISN,OAAO,CAACO,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC5B,gCAAO;AAAQ,cAAA,GAAG,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqBD,MAAM,CAACjD,IAA5B,CAAP;AACH,WAFA,CAJT,CAHJ,eAYI;AAAO,YAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZJ,CADiB;AAAA,SAjBK;AAiC1BmD,QAAAA,eAAe,EAAE,CACb;AACInD,UAAAA,IAAI,EAAE,GADV;AAEI+C,UAAAA,KAAK,EAAE;AAFX,SADa,EAKb;AACI/C,UAAAA,IAAI,EAAE,IADV;AAEI+C,UAAAA,KAAK,EAAE;AAFX,SALa,EASb;AACI/C,UAAAA,IAAI,EAAE,IADV;AAEI+C,UAAAA,KAAK,EAAE;AAFX,SATa,EAab;AACI/C,UAAAA,IAAI,EAAE,IADV;AAEI+C,UAAAA,KAAK,EAAE;AAFX,SAba;AAjCS,OAAD,CAFjC;AAsDI,MAAA,cAAc,EAAC,kBAtDnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZJ,CADE;AAAA,GAPX,CAAP;AA+EH,CAxFD;;IA0FMK,Q;;;;;AACF,oBAAYrC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+BAAMA,KAAN;;AADe,WAmBnBsC,MAnBmB,GAmBV,UAACH,KAAD,EAAW;AAChB,UAAMI,UAAN,GAAqB,OAAKC,KAA1B,CAAMD,UAAN;AACAA,MAAAA,UAAU,CAACJ,KAAD,CAAV,GAAoB,CAACI,UAAU,CAACJ,KAAD,CAA/B;;AAEA,aAAKM,QAAL,CAAc;AACVF,QAAAA,UAAU,EAAEA;AADF,OAAd;;AAIA,aAAKG,WAAL,GAAmB,OAAKA,WAAL,CAAiBC,IAAjB,gCAAnB;AACH,KA5BkB;;AAAA,WA6DnBD,WA7DmB,GA6DL,UAAAE,WAAW,EAAI;AACzB,UAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAMC,UAAU,sBAAQ,IAAIC,GAAJ,CAAQH,WAAW,CAACX,GAAZ,CAAgB,UAAAe,GAAG;AAAA,eAAIA,GAAG,CAACC,QAAR;AAAA,OAAnB,CAAR,CAAR,CAAhB;;AAHyB,iDAKFH,UALE;AAAA;;AAAA;AAAA;AAAA,cAKdI,QALc;AAMrB,cAAMC,YAAY,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,UAAAJ,GAAG;AAAA,mBAAIA,GAAG,CAACC,QAAJ,KAAiBC,QAArB;AAAA,WAAtB,CAArB;;AAEA,cAAMG,KAAK,sBAAQ,IAAIN,GAAJ,CAAQI,YAAY,CAAClB,GAAb,CAAiB,UAAAqB,WAAW;AAAA,mBAAIA,WAAW,CAACC,IAAhB;AAAA,WAA5B,CAAR,CAAR,CAAX;;AAEA,cAAIC,YAAY,GAAG,EAAnB;;AAVqB,sDAYFH,KAZE;AAAA;;AAAA;AAAA;AAAA,kBAYVI,IAZU;AAajB,kBAAMC,QAAQ,GAAGP,YAAY,CAACC,MAAb,CAAoB,UAAAE,WAAW;AAAA,uBAAIA,WAAW,CAACC,IAAZ,KAAqBE,IAAzB;AAAA,eAA/B,CAAjB;AAEAD,cAAAA,YAAY,CAACG,IAAb,CAAkB;AACdJ,gBAAAA,IAAI,EAAEE,IADQ;AAEdG,gBAAAA,MAAM,EAAEF,QAAQ,CAACG,MAAT,CAAgB,UAACC,GAAD,EAAMC,OAAN;AAAA,yBACpBD,GAAG,GAAGC,OAAO,CAACH,MADM;AAAA,iBAAhB,EACkB,CADlB;AAFM,eAAlB;AAfiB;;AAYrB,mEAA0B;AAAA;AAQzB;AApBoB;AAAA;AAAA;AAAA;AAAA;;AAsBrB,cAAMI,WAAW,GAAGb,YAAY,CAACU,MAAb,CAAoB,UAACC,GAAD,EAAMR,WAAN;AAAA,mBACpCQ,GAAG,GAAGR,WAAW,CAACM,MADkB;AAAA,WAApB,EACU,CADV,CAApB;AAGA,cAAMzD,WAAW,GAAGgD,YAAY,CAAClB,GAAb,CAAiB,UAAAqB,WAAW,EAAI;AAChD,mBAAO;AACHW,cAAAA,EAAE,EAAEX,WAAW,CAACW,EADb;AAEHC,cAAAA,WAAW,EAAEZ,WAAW,CAACY,WAFtB;AAGHN,cAAAA,MAAM,gBAAUN,WAAW,CAACM,MAAb,CAAqBpC,cAArB,EAAT,CAHH;AAIH2C,cAAAA,SAAS,EAAE/E,WAAW,CAACkE,WAAW,CAACa,SAAb,CAJnB;AAKHC,cAAAA,IAAI,EAAE,IAAIA,IAAJ,CAASd,WAAW,CAACc,IAArB,EAA2BC,kBAA3B,EALH;AAMHd,cAAAA,IAAI,EAAED,WAAW,CAACC;AANf,aAAP;AAQH,WATmB,CAApB;AAWAX,UAAAA,WAAW,CAACQ,MAAZ,CAAmB,UAAAJ,GAAG;AAAA,mBAAIA,GAAG,CAACC,QAAJ,KAAiBC,QAArB;AAAA,WAAtB;AAEAL,UAAAA,QAAQ,CAACc,IAAT,CAAc;AACVW,YAAAA,IAAI,EAAEpB,QADI;AAEVqB,YAAAA,WAAW,EAAEP,WAFH;AAGVQ,YAAAA,WAAW,EAAErE,WAHH;AAIVsE,YAAAA,YAAY,EAAEjB;AAJJ,WAAd;AAtCqB;;AAKzB,4DAAmC;AAAA;AAuClC;AA5CwB;AAAA;AAAA;AAAA;AAAA;;AA8CzB,UAAIkB,UAAU,GAAG,EAAjB;AACAA,MAAAA,UAAU,CAACC,IAAX,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B9B,QAAQ,CAACnD,MAAnC;;AAEA,aAAK+C,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAEQ,QADA;AAEVN,QAAAA,UAAU,EAAEmC;AAFF,OAAd;AAIH,KAlHkB;;AAAA,WAoHnBE,QApHmB,GAoHR,YAAM;AACb,yBAGI,OAAKpC,KAHT;AAAA,UACIqC,WADJ,gBACIA,WADJ;AAAA,UAEIC,SAFJ,gBAEIA,SAFJ;;AAKA,UAAIA,SAAS,CAACpF,MAAV,KAAqB,CAAzB,EAA4B;AACxB;AACH;;AAED,UAAIqF,mBAAmB,GAAG,EAA1B;AAEA,UAAMC,aAAa,GAAG,IAAIZ,IAAJ,CAASU,SAAS,CAAC,CAAD,CAAlB,EAAuBG,OAAvB,EAAtB;AACA,UAAMC,WAAW,GAAG,IAAId,IAAJ,CAASU,SAAS,CAAC,CAAD,CAAlB,EAAuBG,OAAvB,EAApB;AAEA,UAAIvF,MAAM,GAAGmF,WAAW,CAACnF,MAAzB;;AAEA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7B,YAAM0F,SAAS,GAAG,IAAIf,IAAJ,CAASS,WAAW,CAACpF,CAAD,CAAX,CAAe2E,IAAxB,EAA8Ba,OAA9B,EAAlB;;AAEA,YAAIE,SAAS,IAAIH,aAAb,IACAG,SAAS,IAAID,WADjB,EAC8B;AAC1BH,UAAAA,mBAAmB,CAACpB,IAApB,CAAyBkB,WAAW,CAACpF,CAAD,CAApC;AACH;AACJ;;AAED2F,MAAAA,OAAO,CAACC,GAAR,CAAYN,mBAAZ;;AACA,aAAKrC,WAAL,CAAiBqC,mBAAjB;AACH,KAhJkB;;AAGf,QAAIO,UAAU,GAAG,IAAIlB,IAAJ,EAAjB;AACAkB,IAAAA,UAAU,CAACC,OAAX,CAAmBD,UAAU,CAACE,OAAX,KAAuB,GAA1C;AAEA,WAAKhD,KAAL,GAAa;AACTiD,MAAAA,aAAa,EAAE,KADN;AAETC,MAAAA,WAAW,EAAE,KAFJ;AAGTb,MAAAA,WAAW,EAAE,EAHJ;AAITxC,MAAAA,QAAQ,EAAE,EAJD;AAKTE,MAAAA,UAAU,EAAE,EALH;AAMTuC,MAAAA,SAAS,EAAE,CAACQ,UAAD,EAAa,IAAIlB,IAAJ,EAAb;AANF,KAAb;AASA,WAAK9B,MAAL,GAAc,OAAKA,MAAL,CAAYK,IAAZ,gCAAd;AACA,WAAKiC,QAAL,GAAgB,OAAKA,QAAL,CAAcjC,IAAd,gCAAhB;AAhBe;AAiBlB;;;;;wFAaD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE+BrE,KAAK,CAACqH,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,oBAAzB,0BAF/B;;AAAA;AAEcC,gBAAAA,QAFd;AAIQ,qBAAKtD,QAAL,CAAc;AACVgD,kBAAAA,aAAa,EAAE;AADL,iBAAd;;AAIA,oBAAIM,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,aAA9B,EAA6C;AACrCrD,kBAAAA,WADqC,GACvBmD,QAAQ,CAACC,IAAT,CAAcnB,WADS;AAGzC,uBAAKpC,QAAL,CAAc;AACViD,oBAAAA,WAAW,EAAE,IADH;AAEVb,oBAAAA,WAAW,EAAEjC;AAFH,mBAAd;;AAKA,sBAAIA,WAAW,CAAClD,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,yBAAKkF,QAAL;AACH,mBAFD,MAEO;AACH,yBAAKnC,QAAL,CAAc;AACVJ,sBAAAA,QAAQ,EAAE;AADA,qBAAd;AAGH;AACJ;;AAvBT;AAAA;;AAAA;AAAA;AAAA;AAyBQ,qBAAKI,QAAL,CAAc;AACVgD,kBAAAA,aAAa,EAAE;AADL,iBAAd;;AAzBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAoHA,kBAAS;AAAA;;AACL,wBAOI,KAAKjD,KAPT;AAAA,UACIiD,aADJ,eACIA,aADJ;AAAA,UAEIC,WAFJ,eAEIA,WAFJ;AAAA,UAGIb,WAHJ,eAGIA,WAHJ;AAAA,UAIIxC,SAJJ,eAIIA,QAJJ;AAAA,UAKIE,UALJ,eAKIA,UALJ;AAAA,UAMIuC,SANJ,eAMIA,SANJ;AASA,aAAOY,WAAW,gBAClB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AACI,QAAA,eAAe,EAAE,CACb;AAAEQ,UAAAA,KAAK,EAAE,aAAT;AAAwBC,UAAAA,IAAI,EAAE;AAA9B,SADa,EAEb;AAAED,UAAAA,KAAK,EAAE,UAAT;AAAqBC,UAAAA,IAAI,EAAE,sBAA3B;AAAmDC,UAAAA,MAAM,EAAE;AAA3D,SAFa,CADrB;AAKI,QAAA,KAAK,EAAE,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADA,eAaA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAGI,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEtB,SADX;AAEI,QAAA,QAAQ,EAAE,kBAAAuB,IAAI,EAAI;AACd,UAAA,MAAI,CAAC5D,QAAL,CAAc;AAAEqC,YAAAA,SAAS,EAAEuB;AAAb,WAAd;AACH,SAJL;AAKI,QAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD,SALb;AAQI,QAAA,SAAS,EAAC,cARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAaI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AACI,QAAA,OAAO,EAAE,KAAK1B,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,eAAhC;AACI,QAAA,OAAO,EAAE,mBAAM;AACX,UAAA,MAAI,CAAClC,WAAL,CAAiBmC,WAAjB;AACH,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CAbJ,CAHJ,CADJ,CAbA,eA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,kBADL,eAEI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,IAAIT,IAAJ,CAASU,SAAS,CAAC,CAAD,CAAlB,EAAuBtD,cAAvB,CAAsC,SAAtC,EAAiD;AAAE+E,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAkCC,QAAAA,GAAG,EAAE;AAAvC,OAAjD,CAA7B,CAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,IAAIrC,IAAJ,CAASU,SAAS,CAAC,CAAD,CAAlB,EAAuBtD,cAAvB,CAAsC,SAAtC,EAAiD;AAAE+E,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAkCC,QAAAA,GAAG,EAAE;AAAvC,OAAjD,CAA7B,CAJJ,CA1CA,EAiDCpE,SAAQ,CAAC3C,MAAT,GAAkB,CAAlB,gBACD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK2C,SAAQ,CAACJ,GAAT,CAAa,UAACyE,OAAD,EAAUvE,KAAV;AAAA,4BACV,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwCuE,OAAO,CAACpC,IAAhD,CADJ,eAEI,oBAAC,UAAD;AACI,UAAA,YAAY,EAAEoC,OAAO,CAACjC,YAAR,CAAqBxC,GAArB,CAAyB,UAAA0E,WAAW;AAAA,mBAAIA,WAAW,CAACpD,IAAhB;AAAA,WAApC,CADlB;AAEI,UAAA,UAAU,EAAEmD,OAAO,CAACjC,YAAR,CAAqBxC,GAArB,CAAyB,UAAA0E,WAAW;AAAA,mBAAIA,WAAW,CAAC/C,MAAhB;AAAA,WAApC,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,KAAD;AAAO,UAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAM,UAAA,SAAS,EAAC,yDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA8B8C,OAAO,CAACnC,WAAT,CAAsB/C,cAAtB,EAA7B,EAFJ,eAGI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACc,MAAL,CAAYH,KAAZ,CAAN;AAAA,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CADJ,CADJ,CADJ,CANJ,eAkBI,oBAAC,KAAD;AACI,UAAA,MAAM,EAAEI,UAAU,CAACJ,KAAD,CADtB;AAEI,UAAA,MAAM,EAAE;AAAA,mBAAM,MAAI,CAACG,MAAL,CAAYH,KAAZ,CAAN;AAAA,WAFZ;AAGI,UAAA,IAAI,EAAC,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKI,oBAAC,WAAD;AAAa,UAAA,MAAM,EAAE;AAAA,mBAAM,MAAI,CAACG,MAAL,CAAYH,KAAZ,CAAN;AAAA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgDuE,OAAO,CAACpC,IAAxD,CALJ,eAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,UAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmDoC,OAAO,CAACnC,WAAT,CAAsB/C,cAAtB,EAAlD,EAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,eAKI;AAAI,UAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACgB;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyCkF,OAAO,CAAClC,WAAR,CAAoB9E,MAApB,CAA2B8B,cAA3B,EAAzC,CADhB,CALJ,eASI,oBAAC,gBAAD;AACI,UAAA,WAAW,EAAEkF,OAAO,CAAClC,WADzB;AAEI,UAAA,OAAO,EAAEzF,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CAPJ,eAqBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,SAAS,EAAC,MAApC;AAA2C,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACuD,MAAL,CAAYH,KAAZ,CAAN;AAAA,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CArBJ,CAlBJ,CADJ,CADJ,CADU;AAAA,OAAb,CAFL,CADJ,CADC,gBAuDD,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,GAAG,EAAEyE,SAAV;AAAqB,QAAA,GAAG,EAAC,EAAzB;AAA4B,QAAA,SAAS,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ,CADJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,CAVJ,CAxGA,CADkB,gBA4HtB,oBAAC,SAAD;AACI,QAAA,aAAa,EAAEnB,aADnB;AAEI,QAAA,SAAS,EAAE,sBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5HI;AA+HH;;;;EA5RkBnI,KAAK,CAACuJ,S;;AA6R5B;AAED,eAAexE,QAAf","sourcesContent":["import React from \"react\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport { \r\n    Row, Col, Card, CardBody, \r\n    Button, Media, Modal, ModalHeader, \r\n    ModalBody, ModalFooter,\r\n    Form, FormGroup,\r\n    Container, Input } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport DonutChart from \"./DonutChart\";\r\nimport PageTitle from '../../../components/PageTitle';\r\nimport Preloader from \"../../../components/Preloader\";\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search, CSVExport } from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport NoDataSVG from \"../../../assets/images/no-data.svg\";\r\n\r\nconst columns = [\r\n    {\r\n        dataField: \"ID\",\r\n        text: \"ID\",\r\n        hidden: true,\r\n    },\r\n    {\r\n        dataField: \"Date\",\r\n        text: \"Date\",\r\n        sort: true,\r\n    },\r\n    {\r\n        dataField: \"Amount\",\r\n        text: \"Amount\",\r\n        sort: true,\r\n    },\r\n    {\r\n        dataField: \"Type\",\r\n        text: \"Type\",\r\n        sort: true,\r\n    },\r\n    {\r\n        dataField: \"ExpenseBy\",\r\n        text: \"Expense By\",\r\n        sort: false,\r\n    },\r\n    {\r\n        dataField: \"Description\",\r\n        text: \"Description\",\r\n        sort: false,\r\n    },\r\n];\r\n\r\nfunction ToTitleCase (string) {\r\n    let splitString = string.toLowerCase().split(\" \");\r\n\r\n    for (let i = 0; i < splitString.length; ++i) {\r\n        splitString[i] = splitString[i].charAt(0).toUpperCase() + splitString[i].substring(1);\r\n    }\r\n\r\n    return splitString.join(\" \");\r\n}\r\n\r\nconst ExpenseLogsTable = (props) => {\r\n    const { SearchBar } = Search;\r\n    const { ExportCSVButton } = CSVExport;\r\n\r\n    const {\r\n        expenseLogs,\r\n        columns,\r\n    } = props;\r\n\r\n    return <ToolkitProvider\r\n                bootstrap4\r\n                keyField=\"ID\"\r\n                data={expenseLogs}\r\n                columns={columns}\r\n                search\r\n                exportCSV={{ onlyExportFiltered: true, exportAll: false }}>\r\n                {props => (\r\n                    <React.Fragment>\r\n                        <Row>\r\n                            <Col>\r\n                                <SearchBar {...props.searchProps} />\r\n                            </Col>\r\n                            <Col className=\"text-right\">\r\n                                <ExportCSVButton {...props.csvProps} className=\"btn btn-primary\">\r\n                                    Export CSV\r\n                                </ExportCSVButton>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <BootstrapTable\r\n                            {...props.baseProps}\r\n                            pagination={paginationFactory({\r\n                                paginationSize: 5,\r\n                                pageStartIndex: 1,\r\n                                firstPageText: \"First\",\r\n                                prePageText: \"Back\",\r\n                                nextPageText: \"Next\",\r\n                                lastPageText: \"Last\",\r\n                                nextPageTitle: \"First page\",\r\n                                prePageTitle: \"Pre page\",\r\n                                firstPageTitle: \"Next page\",\r\n                                lastPageTitle: \"Last page\",\r\n                                showTotal: true,\r\n                                paginationTotalRenderer: (from, to, size) => (\r\n                                    <span className=\"react-bootstrap-table-pagination-total ml-4\">\r\n                                        Showing {from.toLocaleString()} to {to.toLocaleString()} of {size.toLocaleString()} Results\r\n                                    </span>\r\n                                ),\r\n                                sizePerPageRenderer: ({ options, currSizePerPage: currentSizePerPage, onSizePerPageChange }) => (\r\n                                    <React.Fragment>\r\n                                        <label className=\"d-inline mr-1\">Show</label>\r\n\r\n                                        <Input type=\"select\" name=\"select\" id=\"no-entries\" \r\n                                            className=\"custom-select custom-select-sm d-inline col-1\"\r\n                                            defaultValue={currentSizePerPage}\r\n                                            onChange={(event) => onSizePerPageChange(event.target.value)}>\r\n                                                {options.map((option, index) => {\r\n                                                    return <option key={index}>{option.text}</option>\r\n                                                })}\r\n                                        </Input>\r\n\r\n                                        <label className=\"d-inline ml-1\">entries</label>\r\n                                    </React.Fragment>\r\n                                ),\r\n                                sizePerPageList: [\r\n                                    {\r\n                                        text: \"5\",\r\n                                        value: 5,\r\n                                    },\r\n                                    {\r\n                                        text: \"10\",\r\n                                        value: 10,\r\n                                    },\r\n                                    {\r\n                                        text: \"15\",\r\n                                        value: 15,\r\n                                    },\r\n                                    {\r\n                                        text: \"20\",\r\n                                        value: 20,\r\n                                    },\r\n                                ],\r\n                            })}\r\n                            wrapperClasses=\"table-responsive\"\r\n                        />\r\n                    </React.Fragment>\r\n                )}\r\n            </ToolkitProvider>;\r\n};\r\n\r\nclass Expenses extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let oneWeekAgo = new Date();\r\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 365);\r\n\r\n        this.state = {\r\n            IsDataFetched: false,\r\n            IsDataFound: false,\r\n            RawExpenses: [],\r\n            Expenses: [],\r\n            ShowModals: [],\r\n            DateRange: [oneWeekAgo, new Date()],\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.onFilter = this.onFilter.bind(this);\r\n    }\r\n\r\n    toggle = (index) => {\r\n        let { ShowModals } = this.state;\r\n        ShowModals[index] = !ShowModals[index];\r\n\r\n        this.setState({\r\n            ShowModals: ShowModals,\r\n        });\r\n\r\n        this.setExpenses = this.setExpenses.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/khyberCity/expenses`);\r\n\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n\r\n            if (response.data.Message === \"Data found.\") {\r\n                let rawExpenses = response.data.RawExpenses;\r\n\r\n                this.setState({\r\n                    IsDataFound: true,\r\n                    RawExpenses: rawExpenses,\r\n                });\r\n\r\n                if (rawExpenses.length > 0) {\r\n                    this.onFilter();\r\n                } else {\r\n                    this.setState({\r\n                        Expenses: []\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n          }\r\n    }\r\n\r\n    setExpenses = rawExpenses => {\r\n        let expenses = [];\r\n\r\n        const categories = [...(new Set(rawExpenses.map(row => row.Category)))];\r\n        \r\n        for (const category of categories) {\r\n            const categoryRows = rawExpenses.filter(row => row.Category === category);\r\n\r\n            const types = [...(new Set(categoryRows.map(categoryRow => categoryRow.Type)))];\r\n\r\n            let expenseTypes = [];\r\n\r\n            for (const type of types) {\r\n                const typeRows = categoryRows.filter(categoryRow => categoryRow.Type === type);\r\n\r\n                expenseTypes.push({\r\n                    Type: type,\r\n                    Amount: typeRows.reduce((sum, typeRow) =>\r\n                        sum + typeRow.Amount, 0)\r\n                });\r\n            }\r\n\r\n            const totalAmount = categoryRows.reduce((sum, categoryRow) =>\r\n                sum + categoryRow.Amount, 0);\r\n\r\n            const expenseLogs = categoryRows.map(categoryRow => {\r\n                return {\r\n                    ID: categoryRow.ID,\r\n                    Description: categoryRow.Description,\r\n                    Amount: `Rs. ${(categoryRow.Amount).toLocaleString()}`,\r\n                    ExpenseBy: ToTitleCase(categoryRow.ExpenseBy),\r\n                    Date: new Date(categoryRow.Date).toLocaleDateString(),\r\n                    Type: categoryRow.Type,\r\n                };\r\n            });\r\n\r\n            rawExpenses.filter(row => row.Category === category); \r\n\r\n            expenses.push({\r\n                Name: category,\r\n                TotalAmount: totalAmount,\r\n                ExpenseLogs: expenseLogs,\r\n                ExpenseTypes: expenseTypes,\r\n            }); \r\n        }\r\n\r\n        let showModals = [];\r\n        showModals.fill(false, 0, expenses.length);\r\n\r\n        this.setState({\r\n            Expenses: expenses,\r\n            ShowModals: showModals,\r\n        });\r\n    };\r\n\r\n    onFilter = () => {\r\n        let { \r\n            RawExpenses,\r\n            DateRange,\r\n        } = this.state;\r\n\r\n        if (DateRange.length !== 2) {\r\n            return;\r\n        }\r\n\r\n        let filteredRawExpenses = [];\r\n\r\n        const fromTimestamp = new Date(DateRange[0]).getTime();\r\n        const toTimestamp = new Date(DateRange[1]).getTime();\r\n\r\n        let length = RawExpenses.length;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const timeStamp = new Date(RawExpenses[i].Date).getTime();\r\n\r\n            if (timeStamp >= fromTimestamp &&\r\n                timeStamp <= toTimestamp) {\r\n                filteredRawExpenses.push(RawExpenses[i]);\r\n            }\r\n        }\r\n\r\n        console.log(filteredRawExpenses);\r\n        this.setExpenses(filteredRawExpenses);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            IsDataFetched,\r\n            IsDataFound,\r\n            RawExpenses,\r\n            Expenses,\r\n            ShowModals,\r\n            DateRange,\r\n        } = this.state;\r\n\r\n        return IsDataFound? \r\n        <React.Fragment>\r\n        <Row className=\"page-title\">\r\n            <Col md={12}>\r\n                <PageTitle\r\n                    breadCrumbItems={[\r\n                        { label: 'Khyber City', path: '/khyberCity/sales' },\r\n                        { label: 'Expenses', path: '/khyberCity/expenses', active: true },\r\n                    ]}\r\n                    title={\"Expenses\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n        <Card>\r\n            <CardBody>\r\n                <h5 className=\"card-title header-title\">Select Date Range</h5>\r\n\r\n                <Form inline>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Flatpickr \r\n                            value={DateRange}\r\n                            onChange={date => { \r\n                                this.setState({ DateRange: date });\r\n                            }} \r\n                            options={{ \r\n                                mode: \"range\" \r\n                            }}\r\n                            className=\"form-control\" />\r\n                    </FormGroup>\r\n\r\n                    <div className=\"btn-group ml-1\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\"\r\n                            onClick={this.onFilter}>Filter</button>\r\n                        <button type=\"button\" className=\"btn btn-white\"\r\n                            onClick={() => {\r\n                                this.setExpenses(RawExpenses);\r\n                            }}>All</button>\r\n                    </div>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n\r\n        <h6>\r\n            {\"Selected Range: \"} \r\n            <span className=\"text-info\">{new Date(DateRange[0]).toLocaleString(\"default\", { year: \"numeric\", month: \"long\", day: \"numeric\" })}</span>\r\n            <span className=\"fas fa-arrow-right mx-1\"/>\r\n            <span className=\"text-info\">{new Date(DateRange[1]).toLocaleString(\"default\", { year: \"numeric\", month: \"long\", day: \"numeric\" })}</span>\r\n        </h6>\r\n\r\n        {Expenses.length > 0 ?\r\n        <React.Fragment>\r\n            <Row>\r\n                \r\n                {Expenses.map((expense, index) => \r\n                    <Col key={index}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <h4 className=\"header-title mt-0 mb-3\">{expense.Name}</h4>\r\n                                <DonutChart \r\n                                    seriesLabels={expense.ExpenseTypes.map(expenseType => expenseType.Type)}\r\n                                    seriesData={expense.ExpenseTypes.map(expenseType => expenseType.Amount)} />\r\n\r\n                                <Row>\r\n                                    <Col md={6} xl={6}>\r\n                                        <Media className=\"p-3\">\r\n                                            <Media body>\r\n                                                <span className=\"text-muted text-uppercase font-size-12 font-weight-bold\">Total Amount</span>\r\n                                                <h2 className=\"mb-2\">{`Rs. ${(expense.TotalAmount).toLocaleString()}`}</h2>\r\n                                                <Button color=\"primary\" onClick={() => this.toggle(index)}>View Expenses</Button>\r\n                                            </Media>\r\n                                        </Media>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Modal\r\n                                    isOpen={ShowModals[index]}\r\n                                    toggle={() => this.toggle(index)}\r\n                                    size=\"xl\">\r\n                                    \r\n                                    <ModalHeader toggle={() => this.toggle(index)}>{expense.Name}</ModalHeader>\r\n\r\n                                    <ModalBody>\r\n                                        <h5 className=\"card-title header-title\">Total Amount</h5>\r\n                                        <p className=\"text-info font-weight-bold\">{`Rs. ${(expense.TotalAmount).toLocaleString()}`}</p>\r\n                                        <hr />\r\n                                        \r\n                                        <h5 className=\"card-title header-title\">\r\n                                            Expense Logs<span className=\"badge badge-info ml-2\">{expense.ExpenseLogs.length.toLocaleString()}</span>\r\n                                        </h5>\r\n\r\n                                        <ExpenseLogsTable\r\n                                            expenseLogs={expense.ExpenseLogs}\r\n                                            columns={columns} />\r\n                                    </ModalBody>\r\n                                    \r\n                                    <ModalFooter>\r\n                                        <Button color=\"secondary\" className=\"ml-1\" onClick={() => this.toggle(index)}>Cancel</Button>\r\n                                    </ModalFooter>\r\n                                </Modal>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>)}\r\n            </Row>\r\n        </React.Fragment> :\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col xl={4} lg={5}>\r\n                    <div className=\"text-center\">\r\n                        <div>\r\n                            <img src={NoDataSVG} alt=\"\" className=\"img-fluid\" />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"text-center\">\r\n                    <h3 className=\"mt-3\">No expenses found.</h3>\r\n                </Col>\r\n            </Row>\r\n        </Container>}\r\n\r\n        \r\n    </React.Fragment> : \r\n    <Preloader \r\n        isDataFetched={IsDataFetched}\r\n        retryLink={\"/khyberCity/expenses\"} />;\r\n    }\r\n};\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}