{"ast":null,"code":"import _createForOfIteratorHelper from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\src\\\\pages\\\\khyberCity\\\\TransferRequests\\\\TransferRequests.js\";\n\nimport React, { useState } from \"react\";\nimport Chart from 'react-apexcharts';\nimport classNames from \"classnames\";\nimport { Row, Col, Card, CardBody, Button, Media, Modal, ModalHeader, ModalBody, ModalFooter, Spinner, Progress, UncontrolledTooltip, Container, Carousel, CarouselItem, CarouselControl, CarouselIndicators } from \"reactstrap\";\nimport axios from \"axios\";\nimport PageTitle from '../../../components/PageTitle';\nimport Preloader from \"../../../components/Preloader\";\nimport NoDataSVG from \"../../../assets/images/no-data.svg\";\nimport TransferRequestsSVG from \"../../../assets/images/transfer-requests.svg\";\nimport DealerSVG from \"../../../assets/images/dealer.svg\";\nimport CustomerSVG from \"../../../assets/images/customer.svg\";\nimport GeometryJPG from \"../../../assets/images/geometry.jpg\";\n\nvar CarousalWithCaptions = function CarousalWithCaptions(props) {\n  var items = props.items;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeIndex = _useState2[0],\n      setActiveIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animating = _useState4[0],\n      setAnimating = _useState4[1];\n\n  var next = function next() {\n    if (animating) return;\n    var nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var previous = function previous() {\n    if (animating) return;\n    var nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  var goToIndex = function goToIndex(newIndex) {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  var slides = items.map(function (item) {\n    return /*#__PURE__*/React.createElement(CarouselItem, {\n      onExiting: function onExiting() {\n        return setAnimating(true);\n      },\n      onExited: function onExited() {\n        return setAnimating(false);\n      },\n      key: item.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center bg-secondary p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      style: {\n        width: \"100%\"\n      },\n      src: item.Source,\n      alt: item.AltText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(Carousel, {\n    style: {\n      width: \"100%\"\n    },\n    activeIndex: activeIndex,\n    next: next,\n    cssModule: {\n      \"width\": \"100%\"\n    },\n    previous: previous,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CarouselIndicators, {\n    items: items,\n    activeIndex: activeIndex,\n    onClickHandler: goToIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), slides, /*#__PURE__*/React.createElement(CarouselControl, {\n    className: \"text-secondary\",\n    direction: \"prev\",\n    directionText: \"Previous\",\n    onClickHandler: previous,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CarouselControl, {\n    className: \"text-secondary\",\n    direction: \"next\",\n    directionText: \"Next\",\n    onClickHandler: next,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar InstallmentEvent = function InstallmentEvent(props) {\n  var installment = props.installment;\n  var date = new Date(installment.Date);\n  var color = installment.Type === \"New Booking\" ? \"success\" : installment.Type === \"Monthly\" ? \"info\" : \"warning\";\n  return /*#__PURE__*/React.createElement(Media, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-date text-center mr-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-sm rounded-circle bg-soft-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-size-16 avatar-title text-primary font-weight-semibold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, date.getDate().toLocaleString(\"default\", {\n    minimumIntegerDigits: 2,\n    useGrouping: false\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"\".concat(date.toLocaleString(\"default\", {\n    month: \"short\"\n  }), \", \").concat(date.getFullYear()))), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"d-inline-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid border mb-2\",\n    alt: \"QR Code\",\n    src: \"https://chart.googleapis.com/chart?chs=200x200&cht=qr&chl=\".concat(installment.QRContent, \"&choe=UTF-8\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"badge float-right badge-\".concat(color),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, installment.Type), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-uppercase font-size-16 text-\".concat(color),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, \"Rs. \".concat(installment.Amount.toLocaleString())), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-item pr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 40\n    }\n  }, \"Invoice Number: \"), installment.InvoiceNumber)), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-item pr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 40\n    }\n  }, \"Amount Received By: \"), installment.ReceivedBy))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 32\n    }\n  }, \"NOTE: \"), \"Scan the QR Code from KCEB IMS to see complete invoice. Paid amount till this transaction was \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 149\n    }\n  }, \"Rs. \".concat(installment.PaidAmount.toLocaleString())), \", and the remaining amount was \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 247\n    }\n  }, \"Rs. \".concat(installment.RemainingAmount.toLocaleString())))))))));\n};\n\nvar RequestsGrid = function RequestsGrid(props) {\n  var requests = props.requests,\n      showModals = props.showModals,\n      toggleModal = props.toggleModal,\n      approveRequest = props.approveRequest;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, requests.map(function (request, index) {\n    var _request$RecoveryPerc;\n\n    request.RecoveryPercentage = (_request$RecoveryPerc = request.RecoveryPercentage) !== null && _request$RecoveryPerc !== void 0 ? _request$RecoveryPerc : 100.00;\n    var recoveryColor = request.RecoveryPercentage > 80 ? \"success\" : request.RecoveryPercentage > 50 ? \"info\" : request.RecoveryPercentage > 30 ? \"warning\" : \"danger\";\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      xl: 4,\n      key: \"cash-plot-\".concat(request.RowNumber),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"justify-content-center mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"fas\", {\n        \"text-success\": request.PlotType === \"Commercial\",\n        \"text-info\": request.PlotType === \"Non Commercial\",\n        \"fa-hotel\": request.PlotType === \"Commercial\",\n        \"fa-home\": request.PlotType === \"Non Commercial\"\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"badge\", \"float-right\", {\n        \"badge-success\": !request.IsBlocked,\n        \"badge-danger\": request.IsBlocked\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, request.IsBlocked ? \"Blocked\" : \"Active\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classNames(\"text-uppercase\", \"font-size-12\", \"mb-2\", {\n        \"text-success\": request.PlotType === \"Commercial\",\n        \"text-info\": request.PlotType === \"Non Commercial\"\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, request.PlotType === \"Commercial\" ? request.PlotType : \"Residential\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-success py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-fingerprint mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 45\n      }\n    }), \"Fingerprint Scanned\")), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-3 font-size-15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, \"Request Overview\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-item pr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 48\n      }\n    }, \"Booking Type: \"), request.BookingType === \"By Installment\" ? \"Installment\" : \"Cash\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-item pr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 48\n      }\n    }, \"Plot Number: \"), request.PlotNumber)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-item pr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 48\n      }\n    }, \"Transfer Date: \"), new Date(request.TransferDate).toLocaleString(\"default\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-item pr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 48\n      }\n    }, \"Transfer Fee: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-size-16 font-weight-bold text-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 45\n      }\n    }, \"Rs. \".concat(request.TransferFee.toLocaleString()))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"outline-info\",\n      className: \"btn-block\",\n      onClick: function onClick() {\n        return toggleModal(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 41\n      }\n    }, \"View Details\"), request.IsApproving ? /*#__PURE__*/React.createElement(Button, {\n      color: \"outline-success\",\n      className: \"btn-block\",\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      color: \"success\",\n      size: \"sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 49\n      }\n    }, \"Approving\")) : request.IsApproved ? /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      className: \"btn-block\",\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-check mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 53\n      }\n    }), \"Approved\") : /*#__PURE__*/React.createElement(Button, {\n      color: \"outline-success\",\n      className: \"btn-block\",\n      onClick: function onClick() {\n        approveRequest(request.TransferRequestID);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 49\n      }\n    }, \"Approve\")), /*#__PURE__*/React.createElement(Modal, {\n      className: \"bg-light\",\n      isOpen: showModals[index],\n      toggle: function toggle() {\n        return toggleModal(index);\n      },\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        return toggleModal(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, \"Plot Number: \".concat(request.PlotNumber)), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title border-bottom p-3 mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 61\n      }\n    }, \"Transfer Request Overview\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-money-bill-wave align-self-center mr-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 77\n      }\n    }, \"Rs. \".concat(request.TransferFee.toLocaleString())), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 77\n      }\n    }, \"Transfer Fee\")))), /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-calendar align-self-center mr-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 77\n      }\n    }, new Date(request.TransferDate).toLocaleString(\"default\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 77\n      }\n    }, \"Requested On\"))))))))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title border-bottom p-3 mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 61\n      }\n    }, \"Customers Overview\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"profile-widget bg-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: request.CurrentCustomerPhoto,\n      alt: \"Current Customer Webcam\",\n      className: \"card-img-top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"text-center p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-info pb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: CustomerSVG,\n      alt: \"\",\n      className: \"img-thumbnail avatar-xl rounded-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-warning mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 85\n      }\n    }, \"Current Customer\")), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 81\n      }\n    }, request.CurrentCustomerMembershipNumber), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 81\n      }\n    }, request.CurrentCustomerName), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://api.whatsapp.com/send?phone=\".concat(request.CurrentCustomerContactNumber),\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      className: \"btn btn-success btn-sm mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fab fa-whatsapp mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 85\n      }\n    }), \"Message\"))))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"profile-widget bg-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: request.NewCustomerPhoto,\n      alt: \"New Customer Webcam\",\n      className: \"card-img-top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"text-center p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-info pb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: CustomerSVG,\n      alt: \"\",\n      className: \"img-thumbnail avatar-xl rounded-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-success mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 85\n      }\n    }, \"New Customer\")), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 81\n      }\n    }, request.NewCustomerMembershipNumber), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 81\n      }\n    }, request.NewCustomerName), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://api.whatsapp.com/send?phone=\".concat(request.NewCustomerContactNumber),\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      className: \"btn btn-success btn-sm mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fab fa-whatsapp mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 85\n      }\n    }), \"Message\")))))))))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title border-bottom p-3 mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 61\n      }\n    }, \"Dealers Overview\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"profile-widget bg-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: GeometryJPG,\n      alt: \"Geometry\",\n      className: \"card-img-top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"text-center p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-info pb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: DealerSVG,\n      alt: \"\",\n      className: \"img-thumbnail avatar-xl rounded-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-warning mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 85\n      }\n    }, \"Current Dealer\")), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 81\n      }\n    }, request.CurrentDealerID), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 81\n      }\n    }, request.CurrentDealerName), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-info font-weight-small mt-2 mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 81\n      }\n    }, \"Commission: Rs. \".concat(request.DealerCommission.toLocaleString())), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://api.whatsapp.com/send?phone=\".concat(request.CurrentDealerContactNumber),\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      className: \"btn btn-success btn-sm mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fab fa-whatsapp mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 85\n      }\n    }), \"Message\"))))), request.CurrentDealerID !== request.NewDealerID && /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"profile-widget bg-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: GeometryJPG,\n      alt: \"Geometry\",\n      className: \"card-img-top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"text-center p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-info pb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: DealerSVG,\n      alt: \"\",\n      className: \"img-thumbnail avatar-xl rounded-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-success mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 89\n      }\n    }, \"New Dealer\")), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 85\n      }\n    }, request.NewDealerID), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 85\n      }\n    }, request.NewDealerName), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://api.whatsapp.com/send?phone=\".concat(request.NewDealerContactNumber),\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      className: \"btn btn-success btn-sm mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fab fa-whatsapp mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 89\n      }\n    }), \"Message\")))))))))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title border-bottom p-3 mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 61\n      }\n    }, \"Scanned Documents\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1 text-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(CarousalWithCaptions, {\n      items: request.Documents.map(function (document, index) {\n        return {\n          Source: document.DocumentImage,\n          AltText: \"Document \".concat(index + 1)\n        };\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title border-bottom p-3 mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 61\n      }\n    }, \"Plot Overview\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-th-large align-self-center mr-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 77\n      }\n    }, request.Size), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 77\n      }\n    }, \"Plot Size\")))), /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas \".concat(request.PlotType === \"Commercial\" ? \"fa-hotel\" : \"fa-home\", \" align-self-center mr-4\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 77\n      }\n    }, request.PlotType === \"Commercial\" ? request.PlotType : \"Residential\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 77\n      }\n    }, \"Plot Type\")))), /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-calendar-check align-self-center mr-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 77\n      }\n    }, new Date(request.BookingDate).toLocaleString(\"default\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 77\n      }\n    }, \"Booking Date\")))), request.BookingType === \"By Installment\" && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-clock align-self-center mr-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 112\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 85\n      }\n    }, new Date(request.LastDatePaid).toLocaleString(\"default\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 85\n      }\n    }, \"Latest Payment Activity\")))), /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-calendar-alt align-self-center mr-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 112\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 \".concat(new Date(request.DueDate).getTime() < new Date().getTime() && request.PaidAmount !== request.TotalAmount && \"text-danger\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 85\n      }\n    }, new Date(request.DueDate).toLocaleString(\"default\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 85\n      }\n    }, \"Monthly Due Date\")))), /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"p-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"m-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-calendar-day align-self-center mr-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 112\n      }\n    })), /*#__PURE__*/React.createElement(Media, {\n      body: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 \".concat(new Date(request.DueDate).getTime() < new Date().getTime() && request.PaidAmount !== request.TotalAmount && \"text-danger\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 85\n      }\n    }, new Date(request.PeriodicDueDate).toLocaleString(\"default\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 85\n      }\n    }, \"Periodic Due Date\")))))))))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title border-bottom p-3 mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 61\n      }\n    }, \"Payment Overview\"), request.BookingType === \"By Installment\" ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      options: {\n        chart: {\n          type: \"pie\"\n        },\n        colors: [\"#43D39E\", \"#FF5C75\", \"#FFBE0B\"],\n        labels: [\"Paid Amount\", \"Short Amount\", \"Remaining Amount\"],\n        tooltip: {\n          theme: \"dark\",\n          y: {\n            show: true,\n            formatter: function formatter(value) {\n              return \"Rs. \".concat(value.toLocaleString());\n            }\n          }\n        },\n        legend: {\n          show: false\n        }\n      },\n      series: [request.PaidAmount, request.ShortAmount, request.RemainingAmount - request.ShortAmount],\n      type: \"donut\",\n      height: 350,\n      className: \"apex-charts\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 77\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-2 mb-4 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 77\n      }\n    }, \"INSTALLMENT INFORMATION\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.MonthlyInstallment.toLocaleString(), \" / Month\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 85\n      }\n    }, \"Monthly Installment\")), /*#__PURE__*/React.createElement(Col, {\n      xl: 4,\n      sm: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.PeriodicInstallment.toLocaleString(), \" / \").concat(request.Period, \" Month(s)\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 85\n      }\n    }, \"Periodic Installment\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-2 mb-4 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 77\n      }\n    }, \"PAYMENT DETAILS\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 3,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 text-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.TotalAmount.toLocaleString())), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 85\n      }\n    }, \"Total\")), /*#__PURE__*/React.createElement(Col, {\n      xl: 3,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 text-success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.PaidAmount.toLocaleString())), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 85\n      }\n    }, \"Paid\")), /*#__PURE__*/React.createElement(Col, {\n      xl: 3,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 text-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.ShortAmount.toLocaleString())), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 85\n      }\n    }, \"Short\")), /*#__PURE__*/React.createElement(Col, {\n      xl: 3,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 text-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.RemainingAmount.toLocaleString())), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 85\n      }\n    }, \"Remaining (Short Inclusive)\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-2 mb-4 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 77\n      }\n    }, \"PLOT RECOVERY PERCENTAGE: \".concat(request.RecoveryPercentage.toFixed(2), \"%\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      value: request.RecoveryPercentage,\n      color: recoveryColor,\n      className: \"progress-lg mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 85\n      }\n    })))))) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      options: {\n        chart: {\n          type: \"pie\"\n        },\n        colors: [\"#43D39E\", \"#FFBE0B\"],\n        labels: [\"Paid Amount\", \"Remaining Amount\"],\n        tooltip: {\n          theme: \"dark\",\n          y: {\n            show: true,\n            formatter: function formatter(value) {\n              return \"Rs. \".concat(value.toLocaleString());\n            }\n          }\n        },\n        legend: {\n          show: false\n        }\n      },\n      series: [request.PaidAmount, 0],\n      type: \"donut\",\n      height: 350,\n      className: \"apex-charts\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 77\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-2 mb-4 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 77\n      }\n    }, \"PAYMENT DETAILS\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: 3,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 text-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.TotalAmount.toLocaleString())), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 85\n      }\n    }, \"Total\")), /*#__PURE__*/React.createElement(Col, {\n      xl: 3,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mt-0 mb-0 text-success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 85\n      }\n    }, \"Rs. \".concat(request.PaidAmount.toLocaleString())), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-size-13\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 85\n      }\n    }, \"Paid\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-2 mb-4 font-weight-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 77\n      }\n    }, \"PLOT RECOVERY PERCENTAGE: \".concat(request.RecoveryPercentage.toFixed(2), \"%\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      value: request.RecoveryPercentage,\n      color: recoveryColor,\n      className: \"progress-lg mb-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 85\n      }\n    })))))))))), request.BookingType === \"By Installment\" && /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"card-title border-bottom p-3 mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 65\n      }\n    }, \"Installment Activity\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-info ml-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 69\n      }\n    }, request.Installments.length.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-timeline mt-2 pl-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled events\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 69\n      }\n    }, request.Installments.map(function (installment, index) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        className: \"event-list\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 84\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(InstallmentEvent, {\n        installment: installment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 85\n        }\n      })));\n    })))))))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      className: \"ml-1\",\n      onClick: function onClick() {\n        return toggleModal(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 45\n      }\n    }, \"Cancel\")))), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"border-top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"align-items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-sm-auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 41\n      }\n    }, \"Recovery\"), /*#__PURE__*/React.createElement(Col, {\n      className: \"offset-sm-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      value: request.RecoveryPercentage,\n      id: \"progress-request-recovery-\".concat(request.RowNumber),\n      color: recoveryColor,\n      className: \"progress-sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n      placement: \"bottom\",\n      id: \"tooltip-request-recovery-\".concat(request.RowNumber),\n      target: \"progress-request-recovery-\".concat(request.RowNumber),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 45\n      }\n    }, \"\".concat(request.RecoveryPercentage.toFixed(2), \"%\")))))));\n  })));\n};\n\nvar TransferRequests = /*#__PURE__*/function (_React$Component) {\n  _inherits(TransferRequests, _React$Component);\n\n  var _super = _createSuper(TransferRequests);\n\n  function TransferRequests(props) {\n    var _this2;\n\n    _classCallCheck(this, TransferRequests);\n\n    _this2 = _super.call(this, props);\n\n    _this2.toggleModal = function (index) {\n      var ShowModals = _this2.state.ShowModals;\n      ShowModals[index] = !ShowModals[index];\n\n      _this2.setState({\n        ShowModals: ShowModals\n      });\n    };\n\n    _this2.approveRequest = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(transferRequestID) {\n        var Requests, index, i, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Requests = _this2.state.Requests;\n                i = 0;\n\n              case 2:\n                if (!(i < Requests.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                if (!(Requests[i].TransferRequestID === transferRequestID)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                index = i;\n                return _context.abrupt(\"break\", 9);\n\n              case 6:\n                ++i;\n                _context.next = 2;\n                break;\n\n              case 9:\n                if (!(Requests[index].IsApproving || Requests[index].IsApproved)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 11:\n                Requests[index].IsApproving = true;\n\n                _this2.setState({\n                  Requests: Requests\n                });\n\n                _context.prev = 13;\n                _context.next = 16;\n                return axios.post(\"\".concat(process.env.REACT_APP_SERVER_URL, \"/khyberCity/approveRequest\"), {\n                  TransferRequestID: transferRequestID\n                });\n\n              case 16:\n                response = _context.sent;\n\n                if (response.data.Message === \"Request approved.\") {\n                  Requests[index].IsApproving = false;\n                  Requests[index].IsApproved = true;\n\n                  _this2.setState({\n                    Requests: Requests\n                  });\n                } else {\n                  Requests[index].IsApproving = false;\n\n                  _this2.setState({\n                    Requests: Requests\n                  });\n                }\n\n                _context.next = 24;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](13);\n                Requests[index].IsApproving = false;\n\n                _this2.setState({\n                  Requests: Requests\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[13, 20]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this2.state = {\n      IsDataFetched: false,\n      IsDataFound: false,\n      Requests: [],\n      ShowModals: []\n    };\n    _this2.toggleModal = _this2.toggleModal.bind(_assertThisInitialized(_this2));\n    _this2.approveRequest = _this2.approveRequest.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(TransferRequests, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, Requests, _iterator, _step, request;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"\".concat(process.env.REACT_APP_SERVER_URL, \"/khyberCity/transferRequests\"));\n\n              case 3:\n                response = _context2.sent;\n                this.setState({\n                  IsDataFetched: true\n                });\n\n                if (response.data.Message === \"Data found.\") {\n                  Requests = response.data.Requests;\n                  _iterator = _createForOfIteratorHelper(Requests);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      request = _step.value;\n                      request.IsApproving = false;\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  this.setState({\n                    IsDataFound: true,\n                    Requests: Requests,\n                    ShowModals: Array.from({\n                      length: Requests.length\n                    }, function () {\n                      return false;\n                    })\n                  });\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.setState({\n                  IsDataFetched: true\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          IsDataFetched = _this$state.IsDataFetched,\n          IsDataFound = _this$state.IsDataFound,\n          Requests = _this$state.Requests,\n          ShowModals = _this$state.ShowModals;\n      return IsDataFound ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        breadCrumbItems: [{\n          label: 'Khyber City',\n          path: '/khyberCity/sales'\n        }, {\n          label: 'Transfer Reqeusts',\n          path: '/khyberCity/transferRequests',\n          active: true\n        }],\n        title: \"Transfer Requests\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 17\n        }\n      }))), Requests.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 2,\n        lg: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: TransferRequestsSVG,\n        className: \"mr-4 align-self-center img-fluid\",\n        alt: \"Transfer Requests\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        xl: 10,\n        lg: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-4 mt-lg-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-0 mb-1 font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 45\n        }\n      }, \"Plot Transfer Requests\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 45\n        }\n      }, \"Following cards show requests for plot transfer that are approved by one of you KCEB IMS Users. Each of the request has been biometrically approved in the presence of both, the plot owner and the person to whom the plot is being transferred. All of associated scanned documents are also attached.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 48\n        }\n      }, \"Total Requests:\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-size-12 badge badge-success ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 80\n        }\n      }, Requests.length))))))))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(RequestsGrid, {\n        requests: Requests,\n        showModals: ShowModals,\n        toggleModal: this.toggleModal,\n        approveRequest: this.approveRequest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 25\n        }\n      })))) : /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 4,\n        lg: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: NoDataSVG,\n        alt: \"\",\n        className: \"img-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 33\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 25\n        }\n      }, \"No requests found.\"))))) : /*#__PURE__*/React.createElement(Preloader, {\n        isDataFetched: IsDataFetched,\n        retryLink: \"/khyberCity/employees\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 5\n        }\n      });\n    }\n  }]);\n\n  return TransferRequests;\n}(React.Component);\n\n;\nexport default TransferRequests;","map":{"version":3,"sources":["E:/Projects/tobesendtobiba11apr23/client/src/pages/khyberCity/TransferRequests/TransferRequests.js"],"names":["React","useState","Chart","classNames","Row","Col","Card","CardBody","Button","Media","Modal","ModalHeader","ModalBody","ModalFooter","Spinner","Progress","UncontrolledTooltip","Container","Carousel","CarouselItem","CarouselControl","CarouselIndicators","axios","PageTitle","Preloader","GeometryJPG","CarousalWithCaptions","props","items","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","goToIndex","newIndex","slides","map","item","src","width","Source","AltText","InstallmentEvent","installment","date","Date","color","Type","getDate","toLocaleString","minimumIntegerDigits","useGrouping","month","getFullYear","QRContent","Amount","InvoiceNumber","ReceivedBy","PaidAmount","RemainingAmount","RequestsGrid","requests","showModals","toggleModal","approveRequest","request","index","RecoveryPercentage","recoveryColor","RowNumber","PlotType","IsBlocked","BookingType","PlotNumber","TransferDate","year","day","TransferFee","IsApproving","IsApproved","TransferRequestID","CurrentCustomerPhoto","CustomerSVG","CurrentCustomerMembershipNumber","CurrentCustomerName","CurrentCustomerContactNumber","NewCustomerPhoto","NewCustomerMembershipNumber","NewCustomerName","NewCustomerContactNumber","DealerSVG","CurrentDealerID","CurrentDealerName","DealerCommission","CurrentDealerContactNumber","NewDealerID","NewDealerName","NewDealerContactNumber","Documents","document","DocumentImage","Size","BookingDate","LastDatePaid","DueDate","getTime","TotalAmount","PeriodicDueDate","chart","type","colors","labels","tooltip","theme","y","show","formatter","value","legend","ShortAmount","MonthlyInstallment","PeriodicInstallment","Period","toFixed","Installments","TransferRequests","ShowModals","state","setState","transferRequestID","Requests","i","post","process","env","REACT_APP_SERVER_URL","response","data","Message","IsDataFetched","IsDataFound","bind","get","Array","from","label","path","active","TransferRequestsSVG","NoDataSVG","Component"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nimport classNames from \"classnames\";\r\n\r\nimport { \r\n    Row, Col, Card, CardBody, \r\n    Button, Media, Modal, ModalHeader, \r\n    ModalBody, ModalFooter, Spinner, Progress, \r\n    UncontrolledTooltip, \r\n    Container,\r\n    Carousel,\r\n    CarouselItem,\r\n    CarouselControl,\r\n    CarouselIndicators } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport PageTitle from '../../../components/PageTitle';\r\nimport Preloader from \"../../../components/Preloader\";\r\n\r\nimport NoDataSVG from \"../../../assets/images/no-data.svg\";\r\nimport TransferRequestsSVG from \"../../../assets/images/transfer-requests.svg\";\r\nimport DealerSVG from \"../../../assets/images/dealer.svg\";\r\nimport CustomerSVG from \"../../../assets/images/customer.svg\";\r\nimport GeometryJPG from \"../../../assets/images/geometry.jpg\";\r\n\r\nconst CarousalWithCaptions = (props) => {\r\n    const { items } = props;\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [animating, setAnimating] = useState(false);\r\n\r\n    const next = () => {\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n        setActiveIndex(nextIndex);\r\n    }\r\n\r\n    const previous = () => {\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n        setActiveIndex(nextIndex);\r\n    }\r\n\r\n    const goToIndex = (newIndex) => {\r\n        if (animating) return;\r\n        setActiveIndex(newIndex);\r\n    }\r\n\r\n    const slides = items.map((item) => {\r\n        return (\r\n            <CarouselItem\r\n                onExiting={() => setAnimating(true)}\r\n                onExited={() => setAnimating(false)}\r\n                key={item.src}>\r\n                <div className=\"text-center bg-secondary p-4\">\r\n                    <img className=\"img-fluid\" \r\n                        style={{ width: \"100%\" }}\r\n                        src={item.Source} alt={item.AltText} />\r\n                </div>\r\n            </CarouselItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Carousel\r\n            style={{ width: \"100%\" }}\r\n            activeIndex={activeIndex}\r\n            next={next}\r\n            cssModule={{ \"width\": \"100%\" }}\r\n            previous={previous} >\r\n            \r\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n            {slides}\r\n            <CarouselControl className=\"text-secondary\" direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n            <CarouselControl className=\"text-secondary\" direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nconst InstallmentEvent = (props) => {\r\n    const { installment } = props;\r\n    const date = new Date(installment.Date);\r\n\r\n    const color = installment.Type === \"New Booking\" ? \"success\" :\r\n        installment.Type === \"Monthly\" ? \"info\" : \"warning\";\r\n\r\n    return <Media>\r\n        <div className=\"event-date text-center mr-4\">\r\n            <div className=\"avatar-sm rounded-circle bg-soft-primary\">\r\n                <span className=\"font-size-16 avatar-title text-primary font-weight-semibold\">{date.getDate().toLocaleString(\"default\", {\r\n                    minimumIntegerDigits: 2,\r\n                    useGrouping: false\r\n                })}</span>\r\n            </div>\r\n            <p className=\"mt-2\">{`${date.toLocaleString(\"default\", { month: \"short\" })}, ${date.getFullYear()}`}</p>\r\n        </div>\r\n        <Media body>\r\n            <Card className=\"d-inline-block\">\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col lg={2}>\r\n                            <div>\r\n                                <img className=\"img-fluid border mb-2\" alt=\"QR Code\" src={`https://chart.googleapis.com/chart?chs=200x200&cht=qr&chl=${installment.QRContent}&choe=UTF-8`} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg={10}>\r\n                            <div className={`badge float-right badge-${color}`}>{installment.Type}</div>\r\n                            <p className={`text-uppercase font-size-16 text-${color}`}>{`Rs. ${installment.Amount.toLocaleString()}`}</p>\r\n\r\n                            <ul className=\"list mb-2\">\r\n                                <li className=\"list-item pr-2\">\r\n                                    <p><strong>Invoice Number: </strong>{installment.InvoiceNumber}</p>\r\n                                </li>\r\n                                <li className=\"list-item pr-2\">\r\n                                    <p><strong>Amount Received By: </strong>{installment.ReceivedBy}</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <p><strong>NOTE: </strong>Scan the QR Code from KCEB IMS to see complete invoice. Paid amount till this transaction was <strong>{`Rs. ${installment.PaidAmount.toLocaleString()}`}</strong>, and the remaining amount was <strong>{`Rs. ${installment.RemainingAmount.toLocaleString()}`}</strong></p>\r\n                        </Col> \r\n                    </Row>               \r\n                </CardBody>\r\n            </Card>\r\n        </Media>\r\n    </Media>;\r\n};\r\n\r\nconst RequestsGrid = (props) => {\r\n    const { \r\n        requests,\r\n        showModals,\r\n        toggleModal,\r\n        approveRequest } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                {requests.map((request, index) => {\r\n                    request.RecoveryPercentage = request.RecoveryPercentage ?? 100.00;\r\n                    \r\n                    const recoveryColor = request.RecoveryPercentage > 80 ? \"success\" : \r\n                        (request.RecoveryPercentage > 50 ? \"info\" :\r\n                        (request.RecoveryPercentage > 30 ? \"warning\" : \"danger\"));\r\n\r\n                    return (\r\n                        <Col lg={6} xl={4} key={`cash-plot-${request.RowNumber}`}>\r\n                            <Card className=\"border\">\r\n                                <CardBody>\r\n                                    <h1 className=\"justify-content-center mb-2\">\r\n                                        <span className={classNames(\"fas\",\r\n                                        {\r\n                                            \"text-success\": request.PlotType === \"Commercial\",\r\n                                            \"text-info\": request.PlotType === \"Non Commercial\",\r\n                                            \"fa-hotel\": request.PlotType === \"Commercial\",\r\n                                            \"fa-home\": request.PlotType === \"Non Commercial\"\r\n                                        })}></span>\r\n                                    </h1>\r\n                                    \r\n                                    <div className={classNames(\"badge\", \"float-right\",\r\n                                        {\r\n                                            \"badge-success\": !request.IsBlocked,\r\n                                            \"badge-danger\": request.IsBlocked,\r\n                                        })}>{request.IsBlocked ? \"Blocked\" : \"Active\"}</div>\r\n\r\n                                    <p className={classNames(\"text-uppercase\", \"font-size-12\", \"mb-2\",\r\n                                        {\r\n                                            \"text-success\": request.PlotType === \"Commercial\",\r\n                                            \"text-info\": request.PlotType === \"Non Commercial\",\r\n                                        })}>{request.PlotType === \"Commercial\" ? request.PlotType : \"Residential\"}</p>\r\n\r\n                                    <hr />\r\n\r\n                                    <h6 className=\"text-muted font-weight-normal mt-2 mb-0\">\r\n                                        <span className=\"badge badge-soft-success py-1\">\r\n                                            <span className=\"fas fa-fingerprint mr-2\" />Fingerprint Scanned</span>\r\n                                    </h6>\r\n\r\n                                    <h4 className=\"mb-3 font-size-15\">Request Overview</h4>\r\n\r\n                                    <ul className=\"list mb-0\">\r\n                                        <li className=\"list-item pr-2\">\r\n                                            <p><strong>Booking Type: </strong>{request.BookingType === \"By Installment\" ? \"Installment\" : \"Cash\"}</p>\r\n                                        </li>\r\n                                        <li className=\"list-item pr-2\">\r\n                                            <p><strong>Plot Number: </strong>{request.PlotNumber}</p>\r\n                                        </li>\r\n                                        <li className=\"list-item pr-2\">\r\n                                            <p><strong>Transfer Date: </strong>{new Date(request.TransferDate).toLocaleString(\"default\", { year: 'numeric', month: 'long', day: 'numeric' })}</p>\r\n                                        </li>\r\n                                        <li className=\"list-item pr-2\">\r\n                                            <p><strong>Transfer Fee: </strong>\r\n                                            <span className=\"font-size-16 font-weight-bold text-primary\">{`Rs. ${request.TransferFee.toLocaleString()}`}</span>\r\n                                            </p>\r\n                                        </li>\r\n                                    </ul>\r\n\r\n                                    <div className=\"button-list\">\r\n                                        <Button color=\"outline-info\" className=\"btn-block\"\r\n                                            onClick={() => toggleModal(index)}>View Details</Button>\r\n                                        \r\n                                        {request.IsApproving ? \r\n                                            <Button color=\"outline-success\" className=\"btn-block\" disabled>\r\n                                                <span><Spinner color=\"success\" size=\"sm\" /></span>\r\n                                                <span className=\"ml-2\">Approving</span>\r\n                                            </Button> : request.IsApproved ? \r\n                                                <Button color=\"success\" className=\"btn-block\" disabled>\r\n                                                    <span className=\"fas fa-check mr-2\"/>Approved</Button> :\r\n                                                <Button color=\"outline-success\" className=\"btn-block\" \r\n                                                    onClick={() => {\r\n                                                        approveRequest(request.TransferRequestID)\r\n                                                    }}>Approve</Button>}\r\n                                    </div>\r\n\r\n                                    <Modal\r\n                                        className=\"bg-light\"\r\n                                        isOpen={showModals[index]}\r\n                                        toggle={() => toggleModal(index)}\r\n                                        size=\"lg\">\r\n                                        \r\n                                        <ModalHeader toggle={() => toggleModal(index)}>{`Plot Number: ${request.PlotNumber}`}</ModalHeader>\r\n\r\n                                        <ModalBody>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Card>\r\n                                                        <CardBody className=\"p-0\">\r\n                                                            <h6 className=\"card-title border-bottom p-3 mb-0 header-title\">Transfer Request Overview</h6>\r\n\r\n                                                            <Row className=\"py-1\">\r\n                                                                <Col xl={4} sm={5}>\r\n                                                                    <Media className=\"p-3\">\r\n                                                                        <h1 className=\"m-0 text-muted\"><span className=\"fas fa-money-bill-wave align-self-center mr-4\" /></h1>\r\n                                                                        <Media body>\r\n                                                                            <h4 className=\"mt-0 mb-0\">{`Rs. ${request.TransferFee.toLocaleString()}`}</h4>\r\n                                                                            <span className=\"text-muted font-size-13\">Transfer Fee</span>\r\n                                                                        </Media>\r\n                                                                    </Media>\r\n                                                                </Col>\r\n                                                                <Col xl={4} sm={5}>\r\n                                                                    <Media className=\"p-3\">\r\n                                                                        <h1 className=\"m-0 text-muted\"><span className=\"fas fa-calendar align-self-center mr-4\" /></h1>\r\n                                                                        <Media body>\r\n                                                                            <h4 className=\"mt-0 mb-0\">{new Date(request.TransferDate).toLocaleString(\"default\", { year: 'numeric', month: 'long', day: 'numeric' })}</h4>\r\n                                                                            <span className=\"text-muted font-size-13\">Requested On</span>\r\n                                                                        </Media>\r\n                                                                    </Media>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Card>\r\n                                                        <CardBody className=\"p-0\">\r\n                                                            <h6 className=\"card-title border-bottom p-3 mb-0 header-title\">Customers Overview</h6>\r\n\r\n                                                            <Row className=\"py-1\">\r\n                                                                <Col lg={6}>\r\n                                                                    <Card className=\"profile-widget bg-light\">\r\n                                                                        <img src={request.CurrentCustomerPhoto} alt=\"Current Customer Webcam\" className=\"card-img-top\" />\r\n\r\n                                                                        <CardBody className=\"text-center p-0\">\r\n                                                                            <div className=\"profile-info pb-3\">\r\n                                                                                <img src={CustomerSVG} alt=\"\" className=\"img-thumbnail avatar-xl rounded-circle\" />\r\n\r\n                                                                                \r\n                                                                                <h5><span className=\"badge badge-soft-warning mt-2 mb-0\">Current Customer</span></h5>\r\n                                                                                <h5 className=\"mt-2 mb-0\">{request.CurrentCustomerMembershipNumber}</h5>\r\n                                                                                <h6 className=\"text-muted font-weight-normal mt-2 mb-4\">{request.CurrentCustomerName}</h6>\r\n\r\n                                                                                <a href={`https://api.whatsapp.com/send?phone=${request.CurrentCustomerContactNumber}`}\r\n                                                                                    rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-success btn-sm mr-1\">\r\n                                                                                    <span className=\"fab fa-whatsapp mr-2\" />Message</a>\r\n                                                                            </div>\r\n                                                                        </CardBody>\r\n                                                                    </Card>\r\n                                                                </Col>\r\n\r\n                                                                <Col lg={6}>\r\n                                                                    <Card className=\"profile-widget bg-light\">\r\n                                                                        <img src={request.NewCustomerPhoto} alt=\"New Customer Webcam\" className=\"card-img-top\" />\r\n\r\n                                                                        <CardBody className=\"text-center p-0\">\r\n                                                                            <div className=\"profile-info pb-3\">\r\n                                                                                <img src={CustomerSVG} alt=\"\" className=\"img-thumbnail avatar-xl rounded-circle\" />\r\n\r\n                                                                                \r\n                                                                                <h5><span className=\"badge badge-soft-success mt-2 mb-0\">New Customer</span></h5>\r\n                                                                                <h5 className=\"mt-2 mb-0\">{request.NewCustomerMembershipNumber}</h5>\r\n                                                                                <h6 className=\"text-muted font-weight-normal mt-2 mb-4\">{request.NewCustomerName}</h6>\r\n\r\n                                                                                <a href={`https://api.whatsapp.com/send?phone=${request.NewCustomerContactNumber}`}\r\n                                                                                    rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-success btn-sm mr-1\">\r\n                                                                                    <span className=\"fab fa-whatsapp mr-2\" />Message</a>\r\n                                                                            </div>\r\n                                                                        </CardBody>\r\n                                                                    </Card>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Card>\r\n                                                        <CardBody className=\"p-0\">\r\n                                                            <h6 className=\"card-title border-bottom p-3 mb-0 header-title\">Dealers Overview</h6>\r\n\r\n                                                            <Row className=\"py-1\">\r\n                                                                <Col lg={6}>\r\n                                                                    <Card className=\"profile-widget bg-light\">\r\n                                                                        <img src={GeometryJPG} alt=\"Geometry\" className=\"card-img-top\" />\r\n\r\n                                                                        <CardBody className=\"text-center p-0\">\r\n                                                                            <div className=\"profile-info pb-3\">\r\n                                                                                <img src={DealerSVG} alt=\"\" className=\"img-thumbnail avatar-xl rounded-circle\" />\r\n\r\n                                                                                \r\n                                                                                <h5><span className=\"badge badge-soft-warning mt-2 mb-0\">Current Dealer</span></h5>\r\n                                                                                <h5 className=\"mt-2 mb-0\">{request.CurrentDealerID}</h5>\r\n                                                                                <h6 className=\"text-muted font-weight-normal mt-2 mb-0\">{request.CurrentDealerName}</h6>\r\n                                                                                <h6 className=\"text-info font-weight-small mt-2 mb-4\">{`Commission: Rs. ${request.DealerCommission.toLocaleString()}`}</h6>\r\n\r\n                                                                                <a href={`https://api.whatsapp.com/send?phone=${request.CurrentDealerContactNumber}`}\r\n                                                                                    rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-success btn-sm mr-1\">\r\n                                                                                    <span className=\"fab fa-whatsapp mr-2\" />Message</a>\r\n                                                                            </div>\r\n                                                                        </CardBody>\r\n                                                                    </Card>\r\n                                                                </Col>\r\n\r\n                                                                {request.CurrentDealerID !== request.NewDealerID &&\r\n                                                                    <Col lg={6}>\r\n                                                                        <Card className=\"profile-widget bg-light\">\r\n                                                                            <img src={GeometryJPG} alt=\"Geometry\" className=\"card-img-top\" />\r\n\r\n                                                                            <CardBody className=\"text-center p-0\">\r\n                                                                                <div className=\"profile-info pb-3\">\r\n                                                                                    <img src={DealerSVG} alt=\"\" className=\"img-thumbnail avatar-xl rounded-circle\" />\r\n\r\n                                                                                    \r\n                                                                                    <h5><span className=\"badge badge-soft-success mt-2 mb-0\">New Dealer</span></h5>\r\n                                                                                    <h5 className=\"mt-2 mb-0\">{request.NewDealerID}</h5>\r\n                                                                                    <h6 className=\"text-muted font-weight-normal mt-2 mb-4\">{request.NewDealerName}</h6>\r\n\r\n                                                                                    <a href={`https://api.whatsapp.com/send?phone=${request.NewDealerContactNumber}`}\r\n                                                                                        rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-success btn-sm mr-1\">\r\n                                                                                        <span className=\"fab fa-whatsapp mr-2\" />Message</a>\r\n                                                                                </div>\r\n                                                                            </CardBody>\r\n                                                                        </Card>\r\n                                                                    </Col>}\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Card>\r\n                                                        <CardBody className=\"p-0\">\r\n                                                            <h6 className=\"card-title border-bottom p-3 mb-0 header-title\">Scanned Documents</h6>\r\n\r\n                                                            <Row className=\"py-1 text-center\">\r\n                                                                <CarousalWithCaptions\r\n                                                                    items={request.Documents.map((document, index) => {\r\n                                                                        return {\r\n                                                                        Source: document.DocumentImage,\r\n                                                                        AltText: `Document ${index + 1}`\r\n                                                                    }})} />\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Card>\r\n                                                        <CardBody className=\"p-0\">\r\n                                                            <h6 className=\"card-title border-bottom p-3 mb-0 header-title\">Plot Overview</h6>\r\n\r\n                                                            <Row className=\"py-1\">\r\n                                                                <Col xl={4} sm={5}>\r\n                                                                    <Media className=\"p-3\">\r\n                                                                        <h1 className=\"m-0 text-muted\"><span className=\"fas fa-th-large align-self-center mr-4\" /></h1>\r\n                                                                        <Media body>\r\n                                                                            <h4 className=\"mt-0 mb-0\">{request.Size}</h4>\r\n                                                                            <span className=\"text-muted font-size-13\">Plot Size</span>\r\n                                                                        </Media>\r\n                                                                    </Media>\r\n                                                                </Col>\r\n                                                                <Col xl={4} sm={5}>\r\n                                                                    <Media className=\"p-3\">\r\n                                                                        <h1 className=\"m-0 text-muted\"><span className={`fas ${request.PlotType === \"Commercial\" ? \"fa-hotel\" : \"fa-home\"} align-self-center mr-4`} /></h1>\r\n                                                                        <Media body>\r\n                                                                            <h4 className=\"mt-0 mb-0\">{request.PlotType === \"Commercial\" ? request.PlotType : \"Residential\"}</h4>\r\n                                                                            <span className=\"text-muted font-size-13\">Plot Type</span>\r\n                                                                        </Media>\r\n                                                                    </Media>\r\n                                                                </Col>\r\n                                                                <Col xl={4} sm={5}>\r\n                                                                    <Media className=\"p-3\">\r\n                                                                        <h1 className=\"m-0 text-muted\"><span className=\"fas fa-calendar-check align-self-center mr-4\" /></h1>\r\n                                                                        <Media body>\r\n                                                                            <h4 className=\"mt-0 mb-0\">{new Date(request.BookingDate).toLocaleString(\"default\", { year: 'numeric', month: 'long', day: 'numeric' })}</h4>\r\n                                                                            <span className=\"text-muted font-size-13\">Booking Date</span>\r\n                                                                        </Media>\r\n                                                                    </Media>\r\n                                                                </Col>\r\n                                                                {request.BookingType === \"By Installment\" &&\r\n                                                                    <React.Fragment>\r\n                                                                        <Col xl={4} sm={5}>\r\n                                                                            <Media className=\"p-3\">\r\n                                                                                <h1 className=\"m-0 text-muted\"><span className=\"fas fa-clock align-self-center mr-4\" /></h1>\r\n                                                                                <Media body>\r\n                                                                                    <h4 className=\"mt-0 mb-0\">{new Date(request.LastDatePaid).toLocaleString(\"default\", { year: 'numeric', month: 'long', day: 'numeric' })}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Latest Payment Activity</span>\r\n                                                                                </Media>\r\n                                                                            </Media>\r\n                                                                        </Col>\r\n                                                                        <Col xl={4} sm={5}>\r\n                                                                            <Media className=\"p-3\">\r\n                                                                                <h1 className=\"m-0 text-muted\"><span className=\"fas fa-calendar-alt align-self-center mr-4\" /></h1>\r\n                                                                                <Media body>\r\n                                                                                    <h4 className={`mt-0 mb-0 ${ (new Date(request.DueDate).getTime() < new Date().getTime() && \r\n                                                                                        request.PaidAmount !== request.TotalAmount) && \"text-danger\" }`}>{new Date(request.DueDate).toLocaleString(\"default\", { year: 'numeric', month: 'long', day: 'numeric' })}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Monthly Due Date</span>\r\n                                                                                </Media>\r\n                                                                            </Media>\r\n                                                                        </Col>\r\n                                                                        <Col xl={4} sm={5}>\r\n                                                                            <Media className=\"p-3\">\r\n                                                                                <h1 className=\"m-0 text-muted\"><span className=\"fas fa-calendar-day align-self-center mr-4\" /></h1>\r\n                                                                                <Media body>\r\n                                                                                    <h4 className={`mt-0 mb-0 ${ (new Date(request.DueDate).getTime() < new Date().getTime() && \r\n                                                                                        request.PaidAmount !== request.TotalAmount) && \"text-danger\" }`}>{new Date(request.PeriodicDueDate).toLocaleString(\"default\", { year: 'numeric', month: 'long', day: 'numeric' })}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Periodic Due Date</span>\r\n                                                                                </Media>\r\n                                                                            </Media>\r\n                                                                        </Col>\r\n                                                                    </React.Fragment>}\r\n                                                            </Row>\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Card>\r\n                                                        <CardBody className=\"p-0\">\r\n                                                            <h6 className=\"card-title border-bottom p-3 mb-0 header-title\">Payment Overview</h6>\r\n\r\n                                                            {request.BookingType === \"By Installment\" ?\r\n                                                                <React.Fragment>\r\n                                                                    <Row>\r\n                                                                        <Col>\r\n                                                                            <Chart\r\n                                                                                options={{\r\n                                                                                    chart: {\r\n                                                                                        type: \"pie\",\r\n                                                                                    },\r\n                                                                                    colors: [\"#43D39E\", \"#FF5C75\", \"#FFBE0B\"],\r\n                                                                                    labels: [\"Paid Amount\", \"Short Amount\", \"Remaining Amount\"],\r\n                                                                                    tooltip: {\r\n                                                                                        theme: \"dark\",\r\n                                                                                        y: { \r\n                                                                                            show: true,\r\n                                                                                            formatter: function (value) {\r\n                                                                                                return `Rs. ${(value).toLocaleString()}`\r\n                                                                                            } \r\n                                                                                        }\r\n                                                                                    },\r\n                                                                                    legend: {\r\n                                                                                        show: false,\r\n                                                                                    },\r\n                                                                                }}\r\n                                                                                series={[\r\n                                                                                    request.PaidAmount, \r\n                                                                                    request.ShortAmount, \r\n                                                                                    request.RemainingAmount - request.ShortAmount ]}\r\n                                                                                type=\"donut\"\r\n                                                                                height={350}\r\n                                                                                className=\"apex-charts\" />\r\n                                                                        </Col>\r\n                                                                    </Row> \r\n                                                                    <Row>\r\n                                                                        <Col>\r\n                                                                            <h6 className=\"mt-2 mb-4 font-weight-bold\">INSTALLMENT INFORMATION</h6>\r\n\r\n                                                                            <Row className=\"py-1\">\r\n                                                                                <Col xl={4} sm={5}>\r\n                                                                                    <h4 className=\"mt-0 mb-0\">{`Rs. ${request.MonthlyInstallment.toLocaleString()} / Month`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Monthly Installment</span>\r\n                                                                                </Col>\r\n                                                                                <Col xl={4} sm={5}>\r\n                                                                                    <h4 className=\"mt-0 mb-0\">{`Rs. ${request.PeriodicInstallment.toLocaleString()} / ${request.Period} Month(s)`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Periodic Installment</span>\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n\r\n                                                                            <hr />\r\n                                                                            \r\n                                                                            <h6 className=\"mt-2 mb-4 font-weight-bold\">PAYMENT DETAILS</h6>\r\n\r\n                                                                            <Row className=\"py-1\">\r\n                                                                                <Col xl={3} sm={6}>\r\n                                                                                    <h4 className=\"mt-0 mb-0 text-info\">{`Rs. ${request.TotalAmount.toLocaleString()}`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Total</span>\r\n                                                                                </Col>\r\n                                                                                <Col xl={3} sm={6}>\r\n                                                                                    <h4 className=\"mt-0 mb-0 text-success\">{`Rs. ${request.PaidAmount.toLocaleString()}`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Paid</span>\r\n                                                                                </Col>\r\n                                                                                <Col xl={3} sm={6}>\r\n                                                                                    <h4 className=\"mt-0 mb-0 text-danger\">{`Rs. ${request.ShortAmount.toLocaleString()}`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Short</span>\r\n                                                                                </Col>\r\n                                                                                <Col xl={3} sm={6}>\r\n                                                                                    <h4 className=\"mt-0 mb-0 text-warning\">{`Rs. ${request.RemainingAmount.toLocaleString()}`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Remaining (Short Inclusive)</span>\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n\r\n                                                                            <hr />\r\n\r\n                                                                            <h6 className=\"mt-2 mb-4 font-weight-bold\">{`PLOT RECOVERY PERCENTAGE: ${request.RecoveryPercentage.toFixed(2)}%`}</h6>\r\n\r\n                                                                            <Row className=\"py-1\">\r\n                                                                                <Col>\r\n                                                                                    <Progress value={request.RecoveryPercentage} color={recoveryColor} className=\"progress-lg mb-2\" />\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </React.Fragment> :\r\n                                                                <React.Fragment>\r\n                                                                    <Row>\r\n                                                                        <Col>\r\n                                                                            <Chart\r\n                                                                                options={{\r\n                                                                                    chart: {\r\n                                                                                        type: \"pie\",\r\n                                                                                    },\r\n                                                                                    colors: [\"#43D39E\", \"#FFBE0B\"],\r\n                                                                                    labels: [\"Paid Amount\", \"Remaining Amount\"],\r\n                                                                                    tooltip: {\r\n                                                                                        theme: \"dark\",\r\n                                                                                        y: { \r\n                                                                                            show: true,\r\n                                                                                            formatter: function (value) {\r\n                                                                                                return `Rs. ${(value).toLocaleString()}`\r\n                                                                                            } \r\n                                                                                        }\r\n                                                                                    },\r\n                                                                                    legend: {\r\n                                                                                        show: false,\r\n                                                                                    },\r\n                                                                                }}\r\n                                                                                series={[ request.PaidAmount, 0 ]}\r\n                                                                                type=\"donut\"\r\n                                                                                height={350}\r\n                                                                                className=\"apex-charts\" />\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                    <Row>\r\n                                                                        <Col>                                                                        \r\n                                                                            <h6 className=\"mt-2 mb-4 font-weight-bold\">PAYMENT DETAILS</h6>\r\n\r\n                                                                            <Row className=\"py-1\">\r\n                                                                                <Col xl={3} sm={6}>\r\n                                                                                    <h4 className=\"mt-0 mb-0 text-info\">{`Rs. ${request.TotalAmount.toLocaleString()}`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Total</span>\r\n                                                                                </Col>\r\n                                                                                <Col xl={3} sm={6}>\r\n                                                                                    <h4 className=\"mt-0 mb-0 text-success\">{`Rs. ${request.PaidAmount.toLocaleString()}`}</h4>\r\n                                                                                    <span className=\"text-muted font-size-13\">Paid</span>\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n\r\n                                                                            <hr />\r\n\r\n                                                                            <h6 className=\"mt-2 mb-4 font-weight-bold\">{`PLOT RECOVERY PERCENTAGE: ${request.RecoveryPercentage.toFixed(2)}%`}</h6>\r\n\r\n                                                                            <Row className=\"py-1\">\r\n                                                                                <Col>\r\n                                                                                    <Progress value={request.RecoveryPercentage} color={recoveryColor} className=\"progress-lg mb-2\" />\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </React.Fragment>}\r\n                                                        </CardBody>\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            {request.BookingType === \"By Installment\" &&\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Card>\r\n                                                            <CardBody className=\"p-0\">\r\n                                                                <h6 className=\"card-title border-bottom p-3 mb-0 header-title\">Installment Activity\r\n                                                                    <span className=\"badge badge-info ml-2\">{request.Installments.length.toLocaleString()}</span></h6>\r\n\r\n                                                                <div className=\"left-timeline mt-2 pl-4\">\r\n                                                                    <ul className=\"list-unstyled events\">\r\n                                                                        {request.Installments.map((installment, index) => {\r\n                                                                            \r\n                                                                            return <li key={index} className=\"event-list\">\r\n                                                                                <div>\r\n                                                                                    <InstallmentEvent installment={installment} />\r\n                                                                                </div>\r\n                                                                            </li>;\r\n                                                                        })}\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            </CardBody>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>}\r\n                                        </ModalBody>\r\n                                        \r\n                                        <ModalFooter>\r\n                                            <Button color=\"secondary\" className=\"ml-1\" onClick={() => toggleModal(index)}>Cancel</Button>\r\n                                        </ModalFooter>\r\n                                    </Modal>\r\n                                </CardBody>\r\n                                \r\n                                <CardBody className=\"border-top\">\r\n                                    <Row className=\"align-items-center\">\r\n                                        <Col className=\"col-sm-auto\">Recovery</Col>\r\n                                        <Col className=\"offset-sm-1\">\r\n                                            <Progress value={request.RecoveryPercentage} id={`progress-request-recovery-${request.RowNumber}`} \r\n                                                color={recoveryColor} className=\"progress-sm\" />\r\n\r\n                                            <UncontrolledTooltip\r\n                                                placement=\"bottom\"\r\n                                                id={`tooltip-request-recovery-${request.RowNumber}`}\r\n                                                target={`progress-request-recovery-${request.RowNumber}`} >{`${request.RecoveryPercentage.toFixed(2)}%`}</UncontrolledTooltip>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nclass TransferRequests extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IsDataFetched: false,\r\n            IsDataFound: false,\r\n            Requests: [],\r\n            ShowModals: [],\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.approveRequest = this.approveRequest.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    toggleModal = (index) => {\r\n        let { ShowModals } = this.state;\r\n\r\n        ShowModals[index] = !ShowModals[index];\r\n\r\n        this.setState({\r\n            ShowModals: ShowModals\r\n        });\r\n    };\r\n\r\n    approveRequest = async (transferRequestID) => {\r\n        let { Requests } = this.state;\r\n\r\n        let index;\r\n\r\n        for (let i = 0; i < Requests.length; ++i) {\r\n            if (Requests[i].TransferRequestID === transferRequestID)\r\n            {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (Requests[index].IsApproving || Requests[index].IsApproved) return;\r\n\r\n        Requests[index].IsApproving = true;\r\n\r\n        this.setState({\r\n            Requests: Requests,\r\n        });\r\n\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/khyberCity/approveRequest`, {\r\n                TransferRequestID: transferRequestID,\r\n            });\r\n    \r\n            if (response.data.Message === \"Request approved.\") {\r\n                Requests[index].IsApproving = false;\r\n                Requests[index].IsApproved = true;\r\n                \r\n                this.setState({\r\n                    Requests: Requests,\r\n                });\r\n            } else {\r\n                Requests[index].IsApproving = false\r\n\r\n                this.setState({\r\n                    Requests: Requests,\r\n                });\r\n            }      \r\n        } catch (error) {\r\n            Requests[index].IsApproving = false\r\n\r\n            this.setState({\r\n                Requests: Requests,\r\n            });\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/khyberCity/transferRequests`);\r\n\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n\r\n            if (response.data.Message === \"Data found.\") {\r\n                let { Requests } = response.data;\r\n\r\n                for (let request of Requests) {\r\n                    request.IsApproving = false;\r\n                }\r\n\r\n                this.setState({\r\n                    IsDataFound: true,\r\n                    Requests: Requests,\r\n                    ShowModals: Array.from(\r\n                        { length: Requests.length }, () => false),\r\n                  });\r\n            }      \r\n        } catch (error) {\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            IsDataFetched,\r\n            IsDataFound,\r\n            Requests,\r\n            ShowModals,\r\n        } = this.state;\r\n\r\n        return IsDataFound? \r\n        <React.Fragment>\r\n        <Row className=\"page-title\">\r\n            <Col md={12}>\r\n                <PageTitle\r\n                    breadCrumbItems={[\r\n                        { label: 'Khyber City', path: '/khyberCity/sales' },\r\n                        { label: 'Transfer Reqeusts', path: '/khyberCity/transferRequests', active: true },\r\n                    ]}\r\n                    title={\"Transfer Requests\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n        {Requests.length > 0 ?\r\n            <React.Fragment>\r\n                <Row className=\"align-items-center\">\r\n                    <Col>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <Row className=\"align-items-center\">\r\n                                    <Col xl={2} lg={3}>\r\n                                        <img src={TransferRequestsSVG} className=\"mr-4 align-self-center img-fluid\" alt=\"Transfer Requests\" />\r\n                                    </Col>\r\n                                    <Col xl={10} lg={9}>\r\n                                        <div className=\"mt-4 mt-lg-0\">\r\n                                            <h5 className=\"mt-0 mb-1 font-weight-bold\">Plot Transfer Requests</h5>\r\n                                            <p className=\"text-muted mb-2\">\r\n                                                Following cards show requests for plot transfer that are approved by one of you KCEB IMS Users. Each of the request has been biometrically approved in the presence of both, the plot owner and the person to whom the plot is being transferred. All of associated scanned documents are also attached.\r\n                                            </p>\r\n\r\n                                            <p><strong>Total Requests:</strong><span className={`font-size-12 badge badge-success ml-2`}>{Requests.length}</span></p>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Card>\r\n                    <CardBody>\r\n                        <RequestsGrid \r\n                            requests={Requests}\r\n                            showModals={ShowModals}\r\n                            toggleModal={this.toggleModal}\r\n                            approveRequest={this.approveRequest} />\r\n                    </CardBody>\r\n                </Card>\r\n            </React.Fragment> : \r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col xl={4} lg={5}>\r\n                        <div className=\"text-center\">\r\n                            <div>\r\n                                <img src={NoDataSVG} alt=\"\" className=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <h3 className=\"mt-3\">No requests found.</h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>}\r\n    </React.Fragment> : \r\n    <Preloader \r\n        isDataFetched={IsDataFetched}\r\n        retryLink={\"/khyberCity/employees\"} />;\r\n    }\r\n};\r\n\r\nexport default TransferRequests;"]},"metadata":{},"sourceType":"module"}