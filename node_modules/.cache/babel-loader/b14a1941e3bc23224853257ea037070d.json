{"ast":null,"code":"import _classCallCheck from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\src\\\\components\\\\Preloader.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Spinner, Button } from \"reactstrap\";\nimport FetchFailedSVG from \"../assets/images/fetch-failed.svg\";\nimport SearchingSVG from \"../assets/images/searching.svg\";\nvar colors = ['primary', 'primary', 'primary'];\n\nvar Preloader = /*#__PURE__*/function (_Component) {\n  _inherits(Preloader, _Component);\n\n  var _super = _createSuper(Preloader);\n\n  function Preloader(props) {\n    _classCallCheck(this, Preloader);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Preloader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.classList.add(\"authentication-bg\");\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.body.classList.remove(\"authentication-bg\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          isDataFetched = _this$props.isDataFetched,\n          retryLink = _this$props.retryLink;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, isDataFetched ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 4,\n        lg: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: FetchFailedSVG,\n        alt: \"\",\n        className: \"img-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 49\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      }, \"Oops! Something went wrong.\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }\n      }, \"Failed to fetch data from the server.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 109\n        }\n      }), \" Please try again!\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-lg btn-primary mt-4\",\n        onClick: function onClick() {\n          window.location.reload();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 41\n        }\n      }, \"Retry\")))) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 4,\n        lg: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: SearchingSVG,\n        alt: \"\",\n        className: \"img-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }\n      }, \"Loading\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }\n      }, colors.map(function (color, index) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          key: index,\n          className: \"m-2\",\n          size: \"sm\",\n          type: \"grow\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 56\n          }\n        });\n      }))))))));\n    }\n  }]);\n\n  return Preloader;\n}(Component);\n\nexport default Preloader;","map":{"version":3,"sources":["E:/Projects/tobesendtobiba11apr23/client/src/components/Preloader.js"],"names":["React","Component","Link","Container","Row","Col","Spinner","Button","colors","Preloader","props","document","body","classList","add","remove","isDataFetched","retryLink","FetchFailedSVG","window","location","reload","SearchingSVG","map","color","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Spinner, Button } from \"reactstrap\";\r\n\r\nimport FetchFailedSVG from \"../assets/images/fetch-failed.svg\";\r\nimport SearchingSVG from \"../assets/images/searching.svg\";\r\n\r\nconst colors = ['primary', 'primary', 'primary' ];\r\n\r\nclass Preloader extends Component {\r\n    constructor (props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.classList.add(\"authentication-bg\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.classList.remove(\"authentication-bg\");\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isDataFetched,\r\n            retryLink,\r\n        } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"my-5\">\r\n                    <Container>\r\n                        {isDataFetched ? \r\n                            <div>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col xl={4} lg={5}>\r\n                                        <div className=\"text-center\">\r\n                                            <div>\r\n                                                <img src={FetchFailedSVG} alt=\"\" className=\"img-fluid\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"text-center\">\r\n                                        <h3 className=\"mt-3\">Oops! Something went wrong.</h3>\r\n                                        <p className=\"text-muted mb-2\">Failed to fetch data from the server.<br /> Please try again!</p>\r\n                                        <Button className=\"btn btn-lg btn-primary mt-4\"\r\n                                            onClick={() => {\r\n                                                window.location.reload();\r\n                                            }}>Retry</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div> : \r\n                            <div>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col xl={4} lg={5}>\r\n                                        <div className=\"text-center\">\r\n                                            <div>\r\n                                                <img src={SearchingSVG} alt=\"\" className=\"img-fluid\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"text-center\">\r\n                                        <h3 className=\"mt-3\">Loading</h3>\r\n                                        \r\n                                        <div>\r\n                                            {colors.map((color, index) => {\r\n                                                return <Spinner key={index} className=\"m-2\" size=\"sm\" type=\"grow\" color={color} />;\r\n                                            })}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>}\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preloader;"]},"metadata":{},"sourceType":"module"}