{"ast":null,"code":"import _toConsumableArray from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\src\\\\pages\\\\khyberCity\\\\Sales\\\\Sales.js\";\nimport React from \"react\";\nimport { Row, Col, Card, CardBody, Form, FormGroup } from \"reactstrap\";\nimport axios from \"axios\";\nimport Flatpickr from \"react-flatpickr\";\nimport Chart from 'react-apexcharts';\nimport PageTitle from '../../../components/PageTitle';\nimport StatisticsChartWidget2 from '../../../components/StatisticsChartWidget2';\nimport Preloader from \"../../../components/Preloader\";\n\nvar Sales = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sales, _React$Component);\n\n  var _super = _createSuper(Sales);\n\n  function Sales(props) {\n    var _this;\n\n    _classCallCheck(this, Sales);\n\n    _this = _super.call(this, props);\n\n    _this.onFilter = function () {\n      var _this$state = _this.state,\n          NewBookings = _this$state.NewBookings,\n          Installments = _this$state.Installments,\n          DateRange = _this$state.DateRange;\n\n      if (DateRange.length !== 2) {\n        return;\n      }\n\n      var filteredBookings = {\n        Amounts: [],\n        Counts: []\n      };\n      var filteredInstallments = {\n        Amounts: [],\n        Counts: []\n      };\n      var fromTimestamp = new Date(DateRange[0]).getTime();\n      var toTimestamp = new Date(DateRange[1]).getTime();\n      var count = 0;\n      var length = NewBookings.Amounts.length;\n\n      for (var i = 0; i < length; i++) {\n        var amount = NewBookings.Amounts[i];\n\n        if (amount[0] >= fromTimestamp && amount[0] <= toTimestamp) {\n          filteredBookings.Amounts[count] = NewBookings.Amounts[i];\n          filteredBookings.Counts[count++] = NewBookings.Counts[i];\n        }\n      }\n\n      count = 0;\n      length = Installments.Amounts.length;\n\n      for (var _i = 0; _i < length; _i++) {\n        var _amount = Installments.Amounts[_i];\n\n        if (_amount[0] >= fromTimestamp && _amount[0] <= toTimestamp) {\n          filteredInstallments.Amounts[count] = Installments.Amounts[_i];\n          filteredInstallments.Counts[count++] = Installments.Counts[_i];\n        }\n      }\n\n      _this.setState({\n        FilteredBookings: filteredBookings,\n        FilteredInstallments: filteredInstallments\n      });\n    };\n\n    var oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 365);\n    _this.state = {\n      IsDataFetched: false,\n      IsDataFound: false,\n      SalesCards: [],\n      NewBookings: {\n        Amounts: [],\n        Counts: []\n      },\n      Installments: {\n        Amounts: [],\n        Counts: []\n      },\n      FilteredBookings: {\n        Amounts: [],\n        Counts: []\n      },\n      FilteredInstallments: {\n        Amounts: [],\n        Counts: []\n      },\n      DailyClosing: {},\n      DateRange: [oneWeekAgo, new Date()]\n    };\n    _this.onFilter = _this.onFilter.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Sales, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(process.env.REACT_APP_SERVER_URL, \"/khyberCity/sales\"));\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  IsDataFetched: true\n                });\n\n                if (response.data.Message === \"Data found.\") {\n                  this.setState({\n                    IsDataFound: true,\n                    SalesCards: response.data.SalesCards,\n                    NewBookings: response.data.NewBookings,\n                    Installments: response.data.Installments,\n                    DailyClosing: response.data.DailyClosing\n                  });\n                  this.onFilter();\n                }\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.setState({\n                  IsDataFetched: true\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          IsDataFetched = _this$state2.IsDataFetched,\n          IsDataFound = _this$state2.IsDataFound,\n          SalesCards = _this$state2.SalesCards,\n          NewBookings = _this$state2.NewBookings,\n          Installments = _this$state2.Installments,\n          DailyClosing = _this$state2.DailyClosing,\n          FilteredBookings = _this$state2.FilteredBookings,\n          FilteredInstallments = _this$state2.FilteredInstallments,\n          DateRange = _this$state2.DateRange;\n      return IsDataFound ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        breadCrumbItems: [{\n          label: 'Khyber City',\n          path: '/khyberCity/sales'\n        }, {\n          label: 'Sales',\n          path: '/khyberCity',\n          active: true\n        }],\n        title: \"Sales\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, \"THIS MONTH STATISTICS\"), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, SalesCards.map(function (salesCard, index) {\n        return /*#__PURE__*/React.createElement(Col, {\n          key: index,\n          md: 6,\n          xl: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(StatisticsChartWidget2, {\n          name: \"Amount\",\n          type: \"area\",\n          title: \"Rs. \".concat(salesCard.TotalAmount.toLocaleString()),\n          subtitle: \"\".concat(salesCard.Count, \" \").concat(salesCard.Name),\n          colors: [salesCard.Color],\n          ymax: Math.max.apply(Math, _toConsumableArray(salesCard.Amounts)),\n          data: salesCard.Amounts,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }\n      }, \"Select Date Range\"), /*#__PURE__*/React.createElement(Form, {\n        inline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"mb-2 mr-sm-2 mb-sm-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Flatpickr, {\n        value: DateRange,\n        onChange: function onChange(date) {\n          _this2.setState({\n            DateRange: date\n          });\n        },\n        options: {\n          mode: \"range\"\n        },\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn-group ml-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: this.onFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 33\n        }\n      }, \"Filter\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-white\",\n        onClick: function onClick() {\n          _this2.setState({\n            FilteredBookings: NewBookings,\n            FilteredInstallments: Installments\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, \"All\"))))), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, \"Selected Range: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }, new Date(DateRange[0]).toLocaleString(\"default\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fas fa-arrow-right mx-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }, new Date(DateRange[1]).toLocaleString(\"default\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      }))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"pb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title mb-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }\n      }, \"Plot Bookings\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-size-12 badge badge-info ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 42\n        }\n      }, FilteredBookings.Amounts.length.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"-new-bookings-charts-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"new-bookings-chart-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        options: {\n          chart: {\n            group: \"new-bookings\",\n            type: 'line',\n            height: 160\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: [\"#43D39E\"],\n          xaxis: {\n            type: 'datetime'\n          },\n          yaxis: {\n            title: {\n              text: \"Number of Bookings\"\n            },\n            labels: {\n              minWidth: 80,\n              formatter: function formatter(val) {\n                return \"\".concat(parseInt(val).toLocaleString());\n              }\n            },\n            tooltip: {\n              x: {\n                format: 'dd MMM yyyy'\n              }\n            }\n          }\n        },\n        series: [{\n          name: \"Number of Bookings\",\n          data: FilteredBookings.Counts\n        }],\n        type: \"line\",\n        className: \"apex-charts mt-3\",\n        height: 160,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"new-bookings-chart-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        options: {\n          chart: {\n            group: \"new-bookings\",\n            type: 'area',\n            height: 300\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: [\"#25C2E3\"],\n          xaxis: {\n            type: 'datetime',\n            title: {\n              text: \"Booking Dates\"\n            }\n          },\n          yaxis: {\n            title: {\n              text: \"Booking Amounts\"\n            },\n            labels: {\n              minWidth: 80,\n              formatter: function formatter(val) {\n                return \"Rs. \".concat(parseInt(val).toLocaleString());\n              }\n            }\n          },\n          tooltip: {\n            x: {\n              format: 'dd MMM yyyy'\n            }\n          }\n        },\n        series: [{\n          name: \"Amount\",\n          data: FilteredBookings.Amounts\n        }],\n        type: \"area\",\n        className: \"apex-charts mt-3\",\n        height: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 33\n        }\n      }))))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"pb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title mb-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }\n      }, \"Installments\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-size-12 badge badge-info ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 41\n        }\n      }, FilteredInstallments.Amounts.length.toLocaleString())), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"installments-charts-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"installments-chart-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        options: {\n          chart: {\n            group: \"installments\",\n            type: 'line',\n            height: 200\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: [\"#FFBE0B\"],\n          xaxis: {\n            type: 'datetime'\n          },\n          yaxis: {\n            title: {\n              text: \"Number of Installments\"\n            },\n            labels: {\n              minWidth: 80,\n              formatter: function formatter(val) {\n                return \"\".concat(parseInt(val).toLocaleString());\n              }\n            },\n            tooltip: {\n              x: {\n                format: 'dd MMM yyyy'\n              }\n            }\n          }\n        },\n        series: [{\n          name: \"Number of Installments\",\n          data: FilteredInstallments.Counts\n        }],\n        type: \"line\",\n        className: \"apex-charts mt-3\",\n        height: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"installments-chart-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Chart, {\n        options: {\n          chart: {\n            group: \"installments\",\n            type: 'area',\n            height: 300\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: [\"#5369F8\"],\n          xaxis: {\n            type: 'datetime',\n            title: {\n              text: \"Installment Dates\"\n            }\n          },\n          yaxis: {\n            title: {\n              text: \"Installments Amounts\"\n            },\n            labels: {\n              minWidth: 80,\n              formatter: function formatter(val) {\n                return \"Rs. \".concat(parseInt(val).toLocaleString());\n              }\n            }\n          },\n          tooltip: {\n            x: {\n              format: 'dd MMM yyyy'\n            }\n          }\n        },\n        series: [{\n          name: \"Amount\",\n          data: FilteredInstallments.Amounts\n        }],\n        type: \"area\",\n        className: \"apex-charts mt-3\",\n        height: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 33\n        }\n      }))))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        className: \"pb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title mb-0 header-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }\n      }, \"Daily Closing Statistics\"), /*#__PURE__*/React.createElement(Chart, {\n        options: {\n          chart: {\n            type: \"bar\",\n            stacked: true,\n            height: 600\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: [\"#008FFB\", \"#00E396\", \"#FEB019\", \"#FF4560\", \"#775DD0\", \"#A493DF\", \"#DF93A4\"],\n          xaxis: {\n            type: 'datetime',\n            title: {\n              text: \"Dates\"\n            }\n          },\n          yaxis: {\n            title: {\n              text: \"Amounts\"\n            },\n            labels: {\n              minWidth: 80,\n              formatter: function formatter(val) {\n                return \"Rs. \".concat(parseInt(val).toLocaleString());\n              }\n            },\n            tooltip: {\n              x: {\n                format: 'dd MMM yyyy'\n              }\n            }\n          }\n        },\n        series: [{\n          name: \"New Bookings\",\n          data: DailyClosing.NewBookingAmounts\n        }, {\n          name: \"Installments\",\n          data: DailyClosing.InstallmentAmounts\n        }, {\n          name: \"Other Transactions\",\n          data: DailyClosing.OtherTransactionAmounts\n        }, {\n          name: \"Online Transfers\",\n          data: DailyClosing.OnlineTransferAmounts\n        }, {\n          name: \"Expenses\",\n          data: DailyClosing.ExpensesAmounts\n        }, {\n          name: \"Cash in Hand\",\n          data: DailyClosing.CashInHandAmounts\n        }, {\n          name: \"Plot Transfers\",\n          data: DailyClosing.PlotTransferAmounts\n        }],\n        type: \"bar\",\n        className: \"apex-charts mt-3\",\n        height: 600,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 29\n        }\n      })))) : /*#__PURE__*/React.createElement(Preloader, {\n        isDataFetched: IsDataFetched,\n        retryLink: \"/khyberCity/sales\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Sales;\n}(React.Component);\n\n;\nexport default Sales;","map":{"version":3,"sources":["E:/Projects/tobesendtobiba11apr23/client/src/pages/khyberCity/Sales/Sales.js"],"names":["React","Row","Col","Card","CardBody","Form","FormGroup","axios","Flatpickr","Chart","PageTitle","StatisticsChartWidget2","Preloader","Sales","props","onFilter","state","NewBookings","Installments","DateRange","length","filteredBookings","Amounts","Counts","filteredInstallments","fromTimestamp","Date","getTime","toTimestamp","count","i","amount","setState","FilteredBookings","FilteredInstallments","oneWeekAgo","setDate","getDate","IsDataFetched","IsDataFound","SalesCards","DailyClosing","bind","get","process","env","REACT_APP_SERVER_URL","response","data","Message","label","path","active","map","salesCard","index","TotalAmount","toLocaleString","Count","Name","Color","Math","max","date","mode","year","month","day","chart","group","type","height","dataLabels","enabled","colors","xaxis","yaxis","title","text","labels","minWidth","formatter","val","parseInt","tooltip","x","format","name","stacked","NewBookingAmounts","InstallmentAmounts","OtherTransactionAmounts","OnlineTransferAmounts","ExpensesAmounts","CashInHandAmounts","PlotTransferAmounts","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, CardBody, Form, FormGroup } from \"reactstrap\";\nimport axios from \"axios\";\nimport Flatpickr from \"react-flatpickr\";\nimport Chart from 'react-apexcharts';\n\nimport PageTitle from '../../../components/PageTitle';\nimport StatisticsChartWidget2 from '../../../components/StatisticsChartWidget2';\nimport Preloader from \"../../../components/Preloader\";\n\nclass Sales extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let oneWeekAgo = new Date();\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 365);\n\n        this.state = {\n            IsDataFetched: false,\n            IsDataFound: false,\n            SalesCards: [],\n            NewBookings: {\n                Amounts: [],\n                Counts: [],\n            },\n            Installments: {\n                Amounts: [],\n                Counts: [],\n            },\n            FilteredBookings: {\n                Amounts: [],\n                Counts: [],\n            },\n            FilteredInstallments: {\n                Amounts: [],\n                Counts: [],\n            }, \n            DailyClosing: {},\n            DateRange: [oneWeekAgo, new Date()]\n        };\n\n        this.onFilter = this.onFilter.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/khyberCity/sales`);\n\n            this.setState({\n                IsDataFetched: true,\n            });\n\n              if (response.data.Message === \"Data found.\") {\n                  this.setState({\n                      IsDataFound: true,\n                      SalesCards: response.data.SalesCards,\n                      NewBookings: response.data.NewBookings,\n                      Installments: response.data.Installments,\n                      DailyClosing: response.data.DailyClosing,\n                  });\n\n                  this.onFilter();\n              }\n          } catch (error) {\n            this.setState({\n                IsDataFetched: true,\n            });\n          }\n    }\n\n    onFilter = () => {\n        let { \n            NewBookings,\n            Installments,\n            DateRange,\n        } = this.state;\n\n        if (DateRange.length !== 2) {\n            return;\n        }\n\n        let filteredBookings = {\n            Amounts: [],\n            Counts: [],\n        };\n\n        let filteredInstallments = {\n            Amounts: [],\n            Counts: [],\n        };\n\n        const fromTimestamp = new Date(DateRange[0]).getTime();\n        const toTimestamp = new Date(DateRange[1]).getTime();\n        \n        let count = 0;\n        let length = NewBookings.Amounts.length;\n\n        for (let i = 0; i < length; i++) {\n            const amount = NewBookings.Amounts[i];\n\n            if (amount[0] >= fromTimestamp &&\n                amount[0] <= toTimestamp) {\n                    filteredBookings.Amounts[count] = NewBookings.Amounts[i];\n                    filteredBookings.Counts[count++] = NewBookings.Counts[i];\n                }\n        }\n\n        count = 0;\n        length = Installments.Amounts.length;\n\n        for (let i = 0; i < length; i++) {\n            const amount = Installments.Amounts[i];\n\n            if (amount[0] >= fromTimestamp &&\n                amount[0] <= toTimestamp) {\n                    filteredInstallments.Amounts[count] = Installments.Amounts[i];\n                    filteredInstallments.Counts[count++] = Installments.Counts[i];\n                }\n        }\n\n        this.setState({\n            FilteredBookings: filteredBookings,\n            FilteredInstallments: filteredInstallments,\n        });\n    }\n\n    render() {\n        const {\n            IsDataFetched,\n            IsDataFound, \n            SalesCards,\n            NewBookings,\n            Installments,\n            DailyClosing,\n            FilteredBookings,\n            FilteredInstallments,\n            DateRange,\n        } = this.state;\n\n        return IsDataFound ? \n            <React.Fragment>\n                <Row className=\"page-title\">\n                    <Col md={12}>\n                        <PageTitle\n                            breadCrumbItems={[\n                                { label: 'Khyber City', path: '/khyberCity/sales' },\n                                { label: 'Sales', path: '/khyberCity', active: true },\n                            ]}\n                            title={\"Sales\"}\n                        />\n                    </Col>\n                </Row>\n    \n                <h6>THIS MONTH STATISTICS</h6>\n    \n                <Row>\n                    {SalesCards.map((salesCard, index) =>\n                        <Col key={index} md={6} xl={3}>\n                            <StatisticsChartWidget2\n                                name=\"Amount\"\n                                type=\"area\"\n                                title={`Rs. ${(salesCard.TotalAmount).toLocaleString()}`}\n                                subtitle={`${salesCard.Count} ${salesCard.Name}`}\n                                colors={[salesCard.Color]}\n                                ymax={Math.max(...salesCard.Amounts)}\n                                data={salesCard.Amounts}>\n                            </StatisticsChartWidget2>\n                        </Col>\n                    )}\n                </Row>\n                \n                <Card>\n                    <CardBody>\n                        <h5 className=\"card-title header-title\">Select Date Range</h5>\n\n                        <Form inline>\n                            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                                <Flatpickr value={DateRange}\n                                    onChange={date => { \n                                        this.setState({ DateRange: date });\n                                    }} \n                                    options={{ \n                                        mode: \"range\" \n                                    }}\n                                    className=\"form-control\" />\n                            </FormGroup>\n\n                            <div className=\"btn-group ml-1\">\n                                <button type=\"button\" className=\"btn btn-secondary\"\n                                    onClick={this.onFilter}>Filter</button>\n                                <button type=\"button\" className=\"btn btn-white\"\n                                    onClick={() => {\n                                        this.setState({\n                                            FilteredBookings: NewBookings,\n                                            FilteredInstallments: Installments\n                                        });\n                                    }}>All</button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n\n                <h6>\n                    {\"Selected Range: \"} \n                    <span className=\"text-info\">{new Date(DateRange[0]).toLocaleString(\"default\", { year: \"numeric\", month: \"long\", day: \"numeric\" })}</span>\n                    <span className=\"fas fa-arrow-right mx-1\"/>\n                    <span className=\"text-info\">{new Date(DateRange[1]).toLocaleString(\"default\", { year: \"numeric\", month: \"long\", day: \"numeric\" })}</span>\n                </h6>\n\n                <Card>\n                    <CardBody className=\"pb-0\">\n                        <h5 className=\"card-title mb-0 header-title\">\n                            Plot Bookings<span className={`font-size-12 badge badge-info ml-2`}>{FilteredBookings.Amounts.length.toLocaleString()}</span>\n                        </h5>\n\n                        <div id=\"-new-bookings-charts-wrapper\">\n                            <div id=\"new-bookings-chart-line\">\n                                <Chart\n                                    options={{\n                                        chart: {\n                                            group: \"new-bookings\",\n                                            type: 'line',\n                                            height: 160,\n                                        },\n                                        dataLabels: {\n                                            enabled: false\n                                        },\n                                        colors: [\"#43D39E\"],\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            title: {\n                                                text: \"Number of Bookings\",\n                                            },\n                                            labels: {\n                                                minWidth: 80,\n                                                formatter: function (val) {\n                                                    return `${(parseInt(val)).toLocaleString()}`;\n                                                },\n                                            },\n                                            tooltip: {\n                                                x: {\n                                                    format: 'dd MMM yyyy'\n                                                }\n                                            }\n                                        },\n                                    }}\n                                    series={[\n                                        {\n                                            name: \"Number of Bookings\",\n                                            data: FilteredBookings.Counts\n                                        }\n                                    ]}\n                                    type=\"line\"\n                                    className=\"apex-charts mt-3\"\n                                    height={160} />\n                            </div>\n                            <div id=\"new-bookings-chart-area\">\n                                <Chart \n                                    options={{\n                                        chart: {\n                                            group: \"new-bookings\",\n                                            type: 'area',\n                                            height: 300,\n                                        },\n                                        dataLabels: {\n                                            enabled: false\n                                        },\n                                        colors: [\"#25C2E3\"],\n                                        xaxis: {\n                                            type: 'datetime',\n                                            title: {\n                                                text: \"Booking Dates\",\n                                            }\n                                        },\n                                        yaxis: {\n                                            title: {\n                                                text: \"Booking Amounts\",\n                                            },\n                                            labels: {\n                                                minWidth: 80,\n                                                formatter: function (val) {\n                                                    return `Rs. ${(parseInt(val)).toLocaleString()}`;\n                                                },\n                                            }\n                                        },\n                                        tooltip: {\n                                            x: {\n                                                format: 'dd MMM yyyy'\n                                            }\n                                        }\n                                    }}\n                                    series={[\n                                        {\n                                            name: \"Amount\",\n                                            data: FilteredBookings.Amounts\n                                        }\n                                    ]}\n                                    type=\"area\"\n                                    className=\"apex-charts mt-3\"\n                                    height={200} />\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n\n                <Card>\n                    <CardBody className=\"pb-0\">\n                        <h5 className=\"card-title mb-0 header-title\">\n                            Installments<span className={`font-size-12 badge badge-info ml-2`}>{FilteredInstallments.Amounts.length.toLocaleString()}</span>\n                        </h5>\n\n                        <div id=\"installments-charts-wrapper\">\n                            <div id=\"installments-chart-line\">\n                                <Chart\n                                    options={{\n                                        chart: {\n                                            group: \"installments\",\n                                            type: 'line',\n                                            height: 200,\n                                        },\n                                        dataLabels: {\n                                            enabled: false\n                                        },\n                                        colors: [\"#FFBE0B\"],\n                                        xaxis: {\n                                            type: 'datetime',\n                                        },\n                                        yaxis: {\n                                            title: {\n                                                text: \"Number of Installments\",\n                                            },\n                                            labels: {\n                                                minWidth: 80,\n                                                formatter: function (val) {\n                                                    return `${(parseInt(val)).toLocaleString()}`;\n                                                },\n                                            },\n                                            tooltip: {\n                                                x: {\n                                                    format: 'dd MMM yyyy'\n                                                }\n                                            }\n                                        },\n                                    }}\n                                    series={[\n                                        {\n                                            name: \"Number of Installments\",\n                                            data: FilteredInstallments.Counts\n                                        },\n                                    ]}\n                                    type=\"line\"\n                                    className=\"apex-charts mt-3\"\n                                    height={200} />\n                            </div>\n                            <div id=\"installments-chart-area\">\n                                <Chart \n                                    options={{\n                                        chart: {\n                                            group: \"installments\",\n                                            type: 'area',\n                                            height: 300,\n                                        },\n                                        dataLabels: {\n                                            enabled: false\n                                        },\n                                        colors: [\"#5369F8\"],\n                                        xaxis: {\n                                            type: 'datetime',\n                                            title: {\n                                                text: \"Installment Dates\",\n                                            }\n                                        },\n                                        yaxis: {\n                                            title: {\n                                                text: \"Installments Amounts\",\n                                            },\n                                            labels: {\n                                                minWidth: 80,\n                                                formatter: function (val) {\n                                                    return `Rs. ${(parseInt(val)).toLocaleString()}`;\n                                                },\n                                            }\n                                        },\n                                        tooltip: {\n                                            x: {\n                                                format: 'dd MMM yyyy'\n                                            }\n                                        }\n                                    }}\n                                    series={[\n                                        {\n                                            name: \"Amount\",\n                                            data: FilteredInstallments.Amounts\n                                        }\n                                    ]}\n                                    type=\"area\"\n                                    className=\"apex-charts mt-3\"\n                                    height={200} />\n                            </div>\n                        </div>\n                    </CardBody>\n                </Card>\n\n                <Card>\n                    <CardBody className=\"pb-0\">\n                        <h5 className=\"card-title mb-0 header-title\">Daily Closing Statistics</h5>\n\n                            <Chart\n                                options={{\n                                    chart: {\n                                        type: \"bar\",\n                                        stacked: true,\n                                        height: 600,\n                                    },\n                                    dataLabels: {\n                                        enabled: false\n                                    },\n                                    colors: [\"#008FFB\", \"#00E396\", \"#FEB019\", \"#FF4560\", \"#775DD0\", \"#A493DF\", \"#DF93A4\"],\n                                    xaxis: {\n                                        type: 'datetime',\n                                        title: {\n                                            text: \"Dates\",\n                                        },\n                                    },\n                                    yaxis: {\n                                        title: {\n                                            text: \"Amounts\",\n                                        },\n                                        labels: {\n                                            minWidth: 80,\n                                            formatter: function (val) {\n                                                return `Rs. ${(parseInt(val)).toLocaleString()}`;\n                                            },\n                                        },\n                                        tooltip: {\n                                            x: {\n                                                format: 'dd MMM yyyy'\n                                            }\n                                        }\n                                    },\n                                }}\n                                series={[\n                                    {\n                                        name: \"New Bookings\",\n                                        data: DailyClosing.NewBookingAmounts,\n                                    },\n                                    {\n                                        name: \"Installments\",\n                                        data: DailyClosing.InstallmentAmounts,\n                                    },\n                                    {\n                                        name: \"Other Transactions\",\n                                        data: DailyClosing.OtherTransactionAmounts,\n                                    },\n                                    {\n                                        name: \"Online Transfers\",\n                                        data: DailyClosing.OnlineTransferAmounts,\n                                    },\n                                    {\n                                        name: \"Expenses\",\n                                        data: DailyClosing.ExpensesAmounts,\n                                    },\n                                    {\n                                        name: \"Cash in Hand\",\n                                        data: DailyClosing.CashInHandAmounts,\n                                    },\n                                    {\n                                        name: \"Plot Transfers\",\n                                        data: DailyClosing.PlotTransferAmounts,\n                                    },\n                                ]}\n                                type=\"bar\"\n                                className=\"apex-charts mt-3\"\n                                height={600} />\n                    </CardBody>\n                </Card>\n            </React.Fragment> :\n            <Preloader \n                isDataFetched={IsDataFetched}\n                retryLink={\"/khyberCity/sales\"} />;\n    }\n};\n\nexport default Sales;"]},"metadata":{},"sourceType":"module"}