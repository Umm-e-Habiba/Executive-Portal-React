{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Projects\\\\tobesendtobiba11apr23\\\\client\\\\src\\\\pages\\\\khyberCity\\\\Employees\\\\Employees.js\";\n\nimport React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Row, Col, Card, CardBody, Button, Media, Modal, ModalHeader, ModalBody, ModalFooter, Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport PageTitle from \"../../../components/PageTitle\";\nimport Preloader from \"../../../components/Preloader\";\nimport NoDataSVG from \"../../../assets/images/no-data.svg\";\nimport EmployeeMaleSVG from \"../../../assets/images/employee-male.svg\";\nimport VisitorSVG from \"../../../assets/images/visitor.svg\";\n\nvar EmployeesGrid = function EmployeesGrid(props) {\n  var employees = props.employees,\n      showModals = props.showModals,\n      toggleModal = props.toggleModal;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, employees.map(function (employee, index) {\n    var _employee$AverageRati;\n\n    var numberOfReviews = employee.Reviews.length;\n    var averageRating = (((_employee$AverageRati = employee.AverageRating) !== null && _employee$AverageRati !== void 0 ? _employee$AverageRati : 0.00) / 20).toFixed(1);\n    var ratingColor = averageRating > 4 ? \"success\" : averageRating > 2.5 ? \"info\" : averageRating > 1.5 ? \"warning\" : \"danger\";\n\n    if (numberOfReviews === 0) {\n      averageRating = \"Unrated\";\n      ratingColor = \"secondary\";\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      xl: 4,\n      key: \"cash-plot-\".concat(employee.RowNumber),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      className: \"pb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: EmployeeMaleSVG,\n      alt: \"\",\n      className: \"avatar-xl rounded-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }, employee.Name), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 41\n      }\n    }, employee.Designation), employee.IsIMSUser ? /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-success py-1 ml-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-desktop mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 45\n      }\n    }), \"IMS User\")) : /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-secondary py-1 ml-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-user mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 45\n      }\n    }), \"Regular\")), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-muted font-weight-normal mt-2 mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-\".concat(employee.Role === \"Unknown\" ? \"secondary\" : \"primary\", \" py-1\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-shield-alt mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }\n    }), employee.Role), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-soft-\".concat(ratingColor, \" py-1 ml-2\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fas fa-star mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 45\n      }\n    }), averageRating)), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://api.whatsapp.com/send?phone=\".concat(employee.PhoneNo),\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      className: \"btn btn-success btn-sm mr-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fab fa-whatsapp mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 45\n      }\n    }), \"Message\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 pt-2 border-top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mb-3 font-size-15\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }\n    }, \"Employee Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-borderless mb-0 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 57\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 57\n      }\n    }, employee.Username ? \"@\".concat(employee.Username.toLowerCase()) : \"@anonymous\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 57\n      }\n    }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 57\n      }\n    }, employee.PhoneNo)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 57\n      }\n    }, \"Total Reviews\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 61\n      }\n    }, numberOfReviews.toLocaleString()))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 mb-4 pt-3 border-top text-left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"outline-info\",\n      className: \"btn-block\",\n      disabled: numberOfReviews === 0,\n      onClick: function onClick() {\n        return toggleModal(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, \"Reviews and Ratings\")), numberOfReviews > 0 && /*#__PURE__*/React.createElement(Modal, {\n      className: \"bg-light\",\n      isOpen: showModals[index],\n      toggle: function toggle() {\n        return toggleModal(index);\n      },\n      size: \"md\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        return toggleModal(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, \"Reviews for @\".concat(employee.Username.toLowerCase())), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      options: {\n        chart: {\n          height: 160,\n          type: \"line\",\n          zoom: {\n            enabled: false\n          }\n        },\n        colors: [\"#FEB019\"],\n        dataLabels: {\n          enabled: false\n        },\n        yaxis: {\n          labels: {\n            formatter: function formatter(val) {\n              return \"\".concat(val, \" Stars\");\n            }\n          }\n        }\n      },\n      series: [{\n        name: \"Stars\",\n        data: employee.Reviews.map(function (review) {\n          return (review.Rating / 20).toFixed(1);\n        })\n      }],\n      type: \"line\",\n      height: 160,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title mb-0 header-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 49\n      }\n    }, \"Showing\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-size-12 badge badge-success ml-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 60\n      }\n    }, \"Top 10\")), employee.Reviews.map(function (review, index) {\n      var rating = (review.Rating / 20).toFixed(1);\n      var color = rating > 4 ? \"success\" : rating > 2.5 ? \"info\" : rating > 1.5 ? \"warning\" : \"danger\";\n      return /*#__PURE__*/React.createElement(Media, {\n        key: index,\n        className: \"mt-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 60\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: VisitorSVG,\n        className: \"mr-3 avatar rounded-circle\",\n        alt: \"shreyu\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(Media, {\n        body: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"text-muted font-weight-normal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-soft-\".concat(color, \" py-1\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fas fa-star mr-1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 65\n        }\n      }), rating)), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"mt-0 mb-0 font-size-15 font-weight-normal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-weight-bold text-secondary mr-1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 65\n        }\n      }, review.VisitorName), \"wrote: \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-italic\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 158\n        }\n      }, review.Review)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 61\n        }\n      }, new Date(review.Date).toLocaleString(\"en-US\", {\n        weekday: \"long\",\n        day: \"numeric\",\n        year: \"numeric\",\n        month: \"long\",\n        hour: \"numeric\",\n        minute: \"numeric\"\n      }))));\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      className: \"ml-1\",\n      onClick: function onClick() {\n        return toggleModal(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, \"Cancel\"))))));\n  })));\n};\n\nvar Employees = /*#__PURE__*/function (_React$Component) {\n  _inherits(Employees, _React$Component);\n\n  var _super = _createSuper(Employees);\n\n  function Employees(props) {\n    var _this2;\n\n    _classCallCheck(this, Employees);\n\n    _this2 = _super.call(this, props);\n\n    _this2.toggleModal = function (index) {\n      var ShowModals = _this2.state.ShowModals;\n      ShowModals[index] = !ShowModals[index];\n\n      _this2.setState({\n        ShowModals: ShowModals\n      });\n    };\n\n    _this2.state = {\n      IsDataFetched: false,\n      IsDataFound: false,\n      Employees: [],\n      ShowModals: []\n    };\n    _this2.toggleModal = _this2.toggleModal.bind(_assertThisInitialized(_this2));\n    ;\n    return _this2;\n  }\n\n  _createClass(Employees, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(process.env.REACT_APP_SERVER_URL, \"/khyberCity/employees\"));\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  IsDataFetched: true\n                });\n\n                if (response.data.Message === \"Data found.\") {\n                  this.setState({\n                    IsDataFound: true,\n                    Employees: response.data.Employees,\n                    ShowModals: Array.from({\n                      length: response.data.Employees.length\n                    }, function () {\n                      return false;\n                    })\n                  });\n                }\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                this.setState({\n                  IsDataFetched: true\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          IsDataFetched = _this$state.IsDataFetched,\n          IsDataFound = _this$state.IsDataFound,\n          _Employees = _this$state.Employees,\n          ShowModals = _this$state.ShowModals;\n      return IsDataFound ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        breadCrumbItems: [{\n          label: \"Khyber City\",\n          path: \"/khyberCity/sales\"\n        }, {\n          label: \"Employees\",\n          path: \"/khyberCity/employees\",\n          active: true\n        }],\n        title: \"Employees\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      }))), _Employees.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EmployeesGrid, {\n        employees: _Employees,\n        showModals: ShowModals,\n        toggleModal: this.toggleModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      })) : /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 4,\n        lg: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: NoDataSVG,\n        alt: \"\",\n        className: \"img-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 33\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }\n      }, \"No employees found.\"))))) : /*#__PURE__*/React.createElement(Preloader, {\n        isDataFetched: IsDataFetched,\n        retryLink: \"/khyberCity/employees\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 5\n        }\n      });\n    }\n  }]);\n\n  return Employees;\n}(React.Component);\n\n;\nexport default Employees;","map":{"version":3,"sources":["E:/Projects/tobesendtobiba11apr23/client/src/pages/khyberCity/Employees/Employees.js"],"names":["React","Chart","Row","Col","Card","CardBody","Button","Media","Modal","ModalHeader","ModalBody","ModalFooter","Container","axios","PageTitle","Preloader","EmployeesGrid","props","employees","showModals","toggleModal","map","employee","index","numberOfReviews","Reviews","length","averageRating","AverageRating","toFixed","ratingColor","RowNumber","EmployeeMaleSVG","Name","Designation","IsIMSUser","Role","PhoneNo","Username","toLowerCase","toLocaleString","chart","height","type","zoom","enabled","colors","dataLabels","yaxis","labels","formatter","val","name","data","review","Rating","rating","color","VisitorSVG","VisitorName","Review","Date","weekday","day","year","month","hour","minute","Employees","ShowModals","state","setState","IsDataFetched","IsDataFound","bind","get","process","env","REACT_APP_SERVER_URL","response","Message","Array","from","label","path","active","NoDataSVG","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport { \r\n    Row, Col, Card, CardBody, \r\n    Button, Media, Modal, ModalHeader, \r\n    ModalBody, ModalFooter,\r\n    Container } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport PageTitle from \"../../../components/PageTitle\";\r\nimport Preloader from \"../../../components/Preloader\";\r\n\r\nimport NoDataSVG from \"../../../assets/images/no-data.svg\";\r\nimport EmployeeMaleSVG from \"../../../assets/images/employee-male.svg\";\r\nimport VisitorSVG from \"../../../assets/images/visitor.svg\";\r\n\r\nconst EmployeesGrid = (props) => {\r\n    const { \r\n        employees,\r\n        showModals,\r\n        toggleModal } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                {employees.map((employee, index) => {\r\n                    const numberOfReviews = employee.Reviews.length;\r\n\r\n                    let averageRating = ((employee.AverageRating ?? 0.00) / 20).toFixed(1);\r\n\r\n                    let ratingColor = averageRating > 4 ? \"success\" : \r\n                        (averageRating > 2.5 ? \"info\" :\r\n                        (averageRating > 1.5 ? \"warning\" : \"danger\"));\r\n\r\n                    if (numberOfReviews === 0) {\r\n                        averageRating = \"Unrated\";\r\n                        ratingColor = \"secondary\";\r\n                    }\r\n\r\n                    return (\r\n                        <Col lg={6} xl={4} key={`cash-plot-${employee.RowNumber}`}>\r\n                            <Card>\r\n                                <CardBody className=\"pb-0\">\r\n                                    <div className=\"text-center mt-3\">\r\n                                        <img src={EmployeeMaleSVG} alt=\"\"\r\n                                            className=\"avatar-xl rounded-circle\" />\r\n                                        \r\n                                        <h5 className=\"mt-2 mb-0\">{employee.Name}</h5>\r\n                                        <h6 className=\"text-muted font-weight-normal mt-2 mb-0\">{employee.Designation}</h6>\r\n\r\n                                        {employee.IsIMSUser ? <h6 className=\"text-muted font-weight-normal mt-2 mb-0\">\r\n                                            <span className={`badge badge-soft-success py-1 ml-2`}>\r\n                                            <span className={`fas fa-desktop mr-1`} />IMS User</span>\r\n                                        </h6> : <h6 className=\"text-muted font-weight-normal mt-2 mb-0\">\r\n                                            <span className={`badge badge-soft-secondary py-1 ml-2`}>\r\n                                            <span className={`fas fa-user mr-1`} />Regular</span>\r\n                                        </h6>}\r\n\r\n                                        <h6 className=\"text-muted font-weight-normal mt-2 mb-4\">\r\n                                            <span className={`badge badge-soft-${employee.Role === \"Unknown\" ? \"secondary\" : \"primary\"} py-1`}>\r\n                                            <span className={`fas fa-shield-alt mr-2`} />{employee.Role}</span>\r\n                                            <span className={`badge badge-soft-${ratingColor} py-1 ml-2`}>\r\n                                            <span className={`fas fa-star mr-1`} />{averageRating}</span>\r\n                                        </h6>\r\n\r\n                                        <a href={`https://api.whatsapp.com/send?phone=${employee.PhoneNo}`}\r\n                                            rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-success btn-sm mr-1\">\r\n                                            <span className=\"fab fa-whatsapp mr-2\" />Message</a>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-3 pt-2 border-top\">\r\n                                        <h4 className=\"mb-3 font-size-15\">Employee Details</h4>\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table table-borderless mb-0 text-muted\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">Username</th>\r\n                                                        <td>{employee.Username ? `@${employee.Username.toLowerCase()}` : \"@anonymous\"}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">Contact Number</th>\r\n                                                        <td>{employee.PhoneNo}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">Total Reviews</th>\r\n                                                        <td>\r\n                                                            <span className=\"badge badge-info\">{numberOfReviews.toLocaleString()}</span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-4 mb-4 pt-3 border-top text-left\">\r\n                                        <Button color=\"outline-info\" className=\"btn-block\"\r\n                                            disabled={numberOfReviews === 0}\r\n                                            onClick={() => toggleModal(index)}>Reviews and Ratings</Button>\r\n                                    </div>\r\n\r\n                                    {numberOfReviews > 0 &&\r\n                                    <Modal\r\n                                    className=\"bg-light\"\r\n                                    isOpen={showModals[index]}\r\n                                    toggle={() => toggleModal(index)}\r\n                                    size=\"md\">\r\n                                    \r\n                                    <ModalHeader toggle={() => toggleModal(index)}>{`Reviews for @${employee.Username.toLowerCase()}`}</ModalHeader>\r\n\r\n                                    <ModalBody>\r\n                                        <Card>\r\n                                            <CardBody>\r\n                                                <Chart \r\n                                                    options={{\r\n                                                        chart: {\r\n                                                            height: 160,\r\n                                                            type: \"line\",\r\n                                                            zoom: {\r\n                                                                enabled: false\r\n                                                            }\r\n                                                        },\r\n                                                        colors: [\"#FEB019\"],\r\n                                                        dataLabels: {\r\n                                                            enabled: false\r\n                                                        },\r\n                                                        yaxis: {\r\n                                                            labels: {\r\n                                                                formatter: function (val) {\r\n                                                                    return `${val} Stars`;\r\n                                                                },\r\n                                                            }\r\n                                                        },\r\n                                                    }} \r\n                                                    series={[{\r\n                                                        name: \"Stars\",\r\n                                                        data: employee.Reviews.map(review => (review.Rating / 20).toFixed(1))\r\n                                                    }]} \r\n                                                    type=\"line\" height={160} />\r\n\r\n                                                <h5 className=\"card-title mb-0 header-title\">\r\n                                                    Showing<span className={`font-size-12 badge badge-success ml-2`}>Top 10</span>\r\n                                                </h5>\r\n\r\n                                                {employee.Reviews.map((review, index) => {\r\n                                                    const rating = (review.Rating / 20).toFixed(1);\r\n\r\n                                                    const color = rating > 4 ? \"success\" : \r\n                                                        (rating > 2.5 ? \"info\" :\r\n                                                        (rating > 1.5 ? \"warning\" : \"danger\"));\r\n\r\n                                                    return <Media key={index} className=\"mt-3\">\r\n                                                        <img src={VisitorSVG} className=\"mr-3 avatar rounded-circle\" alt=\"shreyu\" />\r\n                                                        <Media body>\r\n                                                            <h6 className=\"text-muted font-weight-normal\">\r\n                                                                <span className={`badge badge-soft-${color} py-1`}>\r\n                                                                <span className={`fas fa-star mr-1`} />{rating}</span>\r\n                                                            </h6>\r\n                                                            <h6 className=\"mt-0 mb-0 font-size-15 font-weight-normal\">\r\n                                                                <span className=\"font-weight-bold text-secondary mr-1\">{review.VisitorName}</span>{`wrote: `}<span className=\"font-italic\">{review.Review}</span>\r\n                                                            </h6>\r\n                                                            <p className=\"text-muted\">{new Date(review.Date).toLocaleString(\"en-US\", {\r\n                                                                weekday: \"long\", \r\n                                                                day: \"numeric\", \r\n                                                                year: \"numeric\",\r\n                                                                month: \"long\",\r\n                                                                hour: \"numeric\",\r\n                                                                minute: \"numeric\",\r\n                                                            })}</p>\r\n                                                        </Media>\r\n                                                    </Media>;\r\n                                                })}\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </ModalBody>\r\n                                    \r\n                                    <ModalFooter>\r\n                                        <Button color=\"secondary\" className=\"ml-1\" onClick={() => toggleModal(index)}>Cancel</Button>\r\n                                    </ModalFooter>\r\n                                </Modal>}\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nclass Employees extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IsDataFetched: false,\r\n            IsDataFound: false,\r\n            Employees: [],\r\n            ShowModals: [],\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);;\r\n    }\r\n\r\n    toggleModal = (index) => {\r\n        let { ShowModals } = this.state;\r\n\r\n        ShowModals[index] = !ShowModals[index];\r\n\r\n        this.setState({\r\n            ShowModals: ShowModals\r\n        });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/khyberCity/employees`);\r\n\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n\r\n            if (response.data.Message === \"Data found.\") {\r\n                this.setState({\r\n                    IsDataFound: true,\r\n                    Employees: response.data.Employees,\r\n                    ShowModals: Array.from(\r\n                        { length: response.data.Employees.length }, () => false),\r\n                  });\r\n            }      \r\n        } catch (error) {\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            IsDataFetched,\r\n            IsDataFound,\r\n            Employees,\r\n            ShowModals,\r\n        } = this.state;\r\n\r\n        return IsDataFound? \r\n        <React.Fragment>\r\n        <Row className=\"page-title\">\r\n            <Col md={12}>\r\n                <PageTitle\r\n                    breadCrumbItems={[\r\n                        { label: \"Khyber City\", path: \"/khyberCity/sales\" },\r\n                        { label: \"Employees\", path: \"/khyberCity/employees\", active: true },\r\n                    ]}\r\n                    title={\"Employees\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n        {Employees.length > 0 ?\r\n            <React.Fragment>\r\n                <EmployeesGrid \r\n                    employees={Employees}\r\n                    showModals={ShowModals}\r\n                    toggleModal={this.toggleModal} />\r\n            </React.Fragment> : \r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col xl={4} lg={5}>\r\n                        <div className=\"text-center\">\r\n                            <div>\r\n                                <img src={NoDataSVG} alt=\"\" className=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <h3 className=\"mt-3\">No employees found.</h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>}\r\n    </React.Fragment> : \r\n    <Preloader \r\n        isDataFetched={IsDataFetched}\r\n        retryLink={\"/khyberCity/employees\"} />;\r\n    }\r\n};\r\n\r\nexport default Employees;"]},"metadata":{},"sourceType":"module"}