{"version":3,"sources":["assets/images/no-data.svg","assets/images/employee-male.svg","assets/images/employee-female.svg","pages/khyberCity/Attendance/Attendance.js","components/PageTitle.js","components/Preloader.js","assets/images/fetch-failed.svg","assets/images/searching.svg"],"names":["module","exports","AttendanceCalendar","props","staffMember","events","Attendance","map","attendanceRecord","checkTime","Date","CheckTime","setMinutes","getMinutes","getTimezoneOffset","id","ID","title","IsCheckIn","start","className","haveAttendance","length","latestAttendance","toLocaleString","day","year","month","Time","hour","minute","lg","src","Gender","EmployeeMaleSVG","EmployeeFemaleSVG","alt","Name","Title","defaultView","plugins","BootstrapTheme","dayGridPlugin","interactionPlugin","timeGridPlugin","listPlugin","themeSystem","handleWindowResize","bootstrapFontAwesome","buttonText","today","week","list","prev","next","header","left","center","right","droppable","editable","eventLimit","selectable","state","IsDataFetched","IsDataFound","Staff","StaffNames","SelectedIndex","SelectedMember","a","axios","get","process","response","this","setState","data","Message","staff","item","Fragment","md","breadCrumbItems","label","path","active","inline","type","name","value","onChange","event","target","staffName","index","key","xl","NoDataSVG","isDataFetched","retryLink","React","Component","PageTitle","items","to","colors","Preloader","document","body","classList","add","remove","FetchFailedSVG","onClick","window","location","reload","SearchingSVG","color","size"],"mappings":"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","file":"static/js/22.bdc243ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-data.fec8971f.svg\";","module.exports = __webpack_public_path__ + \"static/media/employee-male.ca564f74.svg\";","module.exports = __webpack_public_path__ + \"static/media/employee-female.96f8c22b.svg\";","import React, { useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { \r\n    Row, Col, Card, CardBody, \r\n    Button, Media, Modal, ModalHeader, \r\n    ModalBody, ModalFooter, Spinner, Progress, \r\n    UncontrolledTooltip, \r\n    Container,\r\n    Form, FormGroup, Input, } from \"reactstrap\";\r\n\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport BootstrapTheme from '@fullcalendar/bootstrap';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport PageTitle from \"../../../components/PageTitle\";\r\nimport Preloader from \"../../../components/Preloader\";\r\n\r\nimport NoDataSVG from \"../../../assets/images/no-data.svg\";\r\nimport EmployeeMaleSVG from \"../../../assets/images/employee-male.svg\";\r\nimport EmployeeFemaleSVG from \"../../../assets/images/employee-female.svg\";\r\n\r\nconst AttendanceCalendar = (props) => {\r\n    const { staffMember } = props;\r\n\r\n    const events = staffMember.Attendance.map(attendanceRecord => {\r\n        let checkTime = new Date(attendanceRecord.CheckTime);\r\n        checkTime.setMinutes(checkTime.getMinutes() + checkTime.getTimezoneOffset());\r\n\r\n        return {\r\n            id: attendanceRecord.ID,\r\n            title: attendanceRecord.IsCheckIn ? \"Check-In\" : \"Check-Out\",\r\n            start: checkTime,\r\n            className: `bg-${attendanceRecord.IsCheckIn ? \"success\" : \"warning\" } text-white font-size-10`,\r\n        };\r\n    });\r\n\r\n    const haveAttendance = staffMember.Attendance.length > 0 ? true : false;\r\n\r\n    let checkTime = null; \r\n    let latestAttendance = null;\r\n\r\n    if (haveAttendance) {\r\n        checkTime = new Date(staffMember.Attendance[0].CheckTime);\r\n        checkTime.setMinutes(checkTime.getMinutes() + checkTime.getTimezoneOffset());\r\n    \r\n        latestAttendance = {\r\n            Date: checkTime.toLocaleString(\"en-US\", {\r\n                day: \"numeric\", \r\n                year: \"numeric\",\r\n                month: \"long\",\r\n            }),\r\n            Time: checkTime.toLocaleString(\"en-US\", {\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n            }),\r\n            IsCheckIn: staffMember.Attendance[0].IsCheckIn, \r\n        };\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <Row className=\"border-botton\">\r\n                    <Col lg={2} className=\"text-center\">\r\n                    <img src={staffMember.Gender === \"M\" ? EmployeeMaleSVG : EmployeeFemaleSVG} alt=\"Employee\"\r\n                        className=\"avatar-xl rounded-circle\" />\r\n                    </Col>\r\n                    <Col lg={10}>\r\n                    <h5 className=\"mb-0\">{staffMember.Name}</h5>\r\n                    <h6 className=\"text-muted font-weight-normal mb-0\">{staffMember.Title}</h6>\r\n\r\n                    {haveAttendance ? \r\n                        latestAttendance.IsCheckIn ?\r\n                        <h6 className=\"text-muted font-weight-normal mt-2\">\r\n                            <span className={`badge badge-sm badge-soft-success py-1`}>\r\n                            <span className={`fas fa-clock mr-1`} />{`Checked in on ${latestAttendance.Date} at ${latestAttendance.Time}.`}</span>\r\n                        </h6> : <h6 className=\"text-muted font-weight-normal mt-2\">\r\n                            <span className={`badge badge-sm badge-soft-info py-1`}>\r\n                            <span className={`fas fa-clock mr-1`} />{`Checked out on ${latestAttendance.Date} at ${latestAttendance.Time}.`}</span>\r\n                        </h6> :\r\n                        <h6 className=\"text-muted font-weight-normal mt-2\">\r\n                            <span className={`badge badge-sm badge-soft-danger py-1`}>\r\n                            <span className={`fas fa-clock mr-1`} />{\"No check-in | check-out record found.\"}</span>\r\n                    </h6>}\r\n                    </Col>\r\n                </Row>\r\n                <FullCalendar\r\n                    defaultView=\"dayGridMonth\"\r\n                    plugins={[BootstrapTheme, dayGridPlugin, interactionPlugin, timeGridPlugin, listPlugin]}\r\n                    themeSystem='bootstrap'\r\n                    handleWindowResize={true}\r\n                    bootstrapFontAwesome={false}\r\n                    buttonText={{today: 'Today', month: 'Month', week: 'Week', day: 'Day', list: 'List', prev: 'Prev', next: 'Next' }}\r\n                    header={{\r\n                        left: 'prev,next today',\r\n                        center: 'title',\r\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n                    }}\r\n                    droppable={false}\r\n                    editable={false}\r\n                    eventLimit={false} // allow \"more\" link when too many events\r\n                    selectable={false}\r\n                    events={events}\r\n                    id=\"calendar\"\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nclass Attendance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            IsDataFetched: false,\r\n            IsDataFound: false,\r\n            Staff: [],\r\n            StaffNames: [],\r\n            SelectedIndex: -1,\r\n            SelectedMember: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/khyberCity/staffAttendance`);\r\n\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n\r\n            if (response.data.Message === \"Data found.\") {\r\n                const staff = response.data.Staff;\r\n\r\n                this.setState({\r\n                    IsDataFound: true,\r\n                    Staff: staff,\r\n                    StaffNames: staff.map(item => item.Name),\r\n                    SelectedIndex: staff.length > 0 ? 0 : -1,\r\n                    SelectedMember: staff.length > 0 ? staff[0] : null\r\n                });\r\n            }      \r\n        } catch (error) {\r\n            this.setState({\r\n                IsDataFetched: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            IsDataFetched,\r\n            IsDataFound,\r\n            StaffNames,\r\n            SelectedIndex,\r\n            SelectedMember,\r\n        } = this.state;\r\n\r\n        return IsDataFound? \r\n        <React.Fragment>\r\n        <Row className=\"page-title\">\r\n            <Col md={12}>\r\n                <PageTitle\r\n                    breadCrumbItems={[\r\n                        { label: \"Khyber City\", path: \"/khyberCity/sales\" },\r\n                        { label: \"Attendance\", path: \"/khyberCity/attendance\", active: true },\r\n                    ]}\r\n                    title={\"Attendance\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n        {StaffNames.length > 0 ?\r\n            <React.Fragment>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Form inline>\r\n                            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                                <Input type=\"select\" name=\"StaffNames\"\r\n                                    value={SelectedIndex}\r\n                                    onChange={event => {\r\n                                        const { \r\n                                            Staff\r\n                                         } = this.state;\r\n\r\n                                        this.setState({\r\n                                            SelectedIndex: event.target.value,\r\n                                            SelectedMember: Staff[event.target.value]\r\n                                        });\r\n                                    }}>\r\n                                    {StaffNames.map((staffName, index) => {\r\n                                        return <option key={index} value={index}>{staffName}</option>;\r\n                                    })}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n                <AttendanceCalendar \r\n                    staffMember={SelectedMember} />\r\n            </React.Fragment> : \r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col xl={4} lg={5}>\r\n                        <div className=\"text-center\">\r\n                            <div>\r\n                                <img src={NoDataSVG} alt=\"\" className=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <h3 className=\"mt-3\">No attendance records found.</h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>}\r\n    </React.Fragment> : \r\n    <Preloader \r\n        isDataFetched={IsDataFetched}\r\n        retryLink={\"/khyberCity/attendance\"} />;\r\n    }\r\n};\r\n\r\nexport default Attendance;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n/**\n * Renders the PageTitle\n */\nconst PageTitle = (props) => {\n    const title = props.title || \"\";\n    const items = props.breadCrumbItems || \"\";\n    return (\n        <React.Fragment>\n            \n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\n                <BreadcrumbItem>\n                    <Link to=\"/\">Attari Admin</Link>\n                </BreadcrumbItem>\n                {items.map((item, index) => {\n                    return item.active ? (\n                        <BreadcrumbItem active key={index}>\n                            {item.label}\n                        </BreadcrumbItem>\n                    ) : (\n                            <BreadcrumbItem key={index}>\n                                <Link to={item.path}>{item.label}</Link>\n                            </BreadcrumbItem>\n                        );\n                })}\n            </Breadcrumb>\n\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\n        </React.Fragment>\n    )\n}\n\nexport default PageTitle;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Spinner, Button } from \"reactstrap\";\r\n\r\nimport FetchFailedSVG from \"../assets/images/fetch-failed.svg\";\r\nimport SearchingSVG from \"../assets/images/searching.svg\";\r\n\r\nconst colors = ['primary', 'primary', 'primary' ];\r\n\r\nclass Preloader extends Component {\r\n    constructor (props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.classList.add(\"authentication-bg\");\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.classList.remove(\"authentication-bg\");\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isDataFetched,\r\n            retryLink,\r\n        } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"my-5\">\r\n                    <Container>\r\n                        {isDataFetched ? \r\n                            <div>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col xl={4} lg={5}>\r\n                                        <div className=\"text-center\">\r\n                                            <div>\r\n                                                <img src={FetchFailedSVG} alt=\"\" className=\"img-fluid\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"text-center\">\r\n                                        <h3 className=\"mt-3\">Oops! Something went wrong.</h3>\r\n                                        <p className=\"text-muted mb-2\">Failed to fetch data from the server.<br /> Please try again!</p>\r\n                                        <Button className=\"btn btn-lg btn-primary mt-4\"\r\n                                            onClick={() => {\r\n                                                window.location.reload();\r\n                                            }}>Retry</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div> : \r\n                            <div>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col xl={4} lg={5}>\r\n                                        <div className=\"text-center\">\r\n                                            <div>\r\n                                                <img src={SearchingSVG} alt=\"\" className=\"img-fluid\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"text-center\">\r\n                                        <h3 className=\"mt-3\">Loading</h3>\r\n                                        \r\n                                        <div>\r\n                                            {colors.map((color, index) => {\r\n                                                return <Spinner key={index} className=\"m-2\" size=\"sm\" type=\"grow\" color={color} />;\r\n                                            })}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>}\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preloader;","module.exports = __webpack_public_path__ + \"static/media/fetch-failed.d47b94a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/searching.fdf701a1.svg\";"],"sourceRoot":""}