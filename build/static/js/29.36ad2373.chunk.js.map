{"version":3,"sources":["assets/images/logo.png","components/Loader.js","pages/auth/ForgetPassword.js"],"names":["module","exports","PreLoaderWidget","className","role","Component","ForgetPassword","props","_isMounted","handleValidSubmit","event","values","console","log","setState","isLoading","window","setTimeout","passwordResetSuccessful","renderRedirectToRoot","isUserAuthenticated","to","bind","onDismiss","state","this","document","body","classList","add","remove","isAuthTokenValid","Fragment","xl","md","href","src","logo","alt","height","error","color","isOpen","onValidSubmit","for","addonType","type","name","id","placeholder","value","email","required","connect"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,kC,qFCKrCC,E,4JAEF,WACI,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,4CAA4CC,KAAK,iB,GANtDC,aAafH,O,oRCNTI,E,kDAGF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAHVC,YAAa,EAEM,EA+BnBC,kBAAoB,SAACC,EAAOC,GACxBC,QAAQC,IAAIF,GAEZ,EAAKG,SAAS,CAAEC,WAAW,IAI3BC,OAAOC,YAAW,WACd,EAAKH,SAAS,CAAEC,WAAW,EAAOG,yBAAyB,MAC5D,MAxCY,EA+CnBC,qBAAuB,WAEnB,GADyBC,cAErB,OAAO,kBAAC,IAAD,CAAUC,GAAG,OA/CxB,EAAKZ,kBAAoB,EAAKA,kBAAkBa,KAAvB,gBACzB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,MAAQ,CACTN,yBAAyB,EACzBH,WAAW,GAPA,E,qDAWnB,WACIU,KAAKjB,YAAa,EAClBkB,SAASC,KAAKC,UAAUC,IAAI,uB,kCAGhC,WACIJ,KAAKjB,YAAa,EAClBkB,SAASC,KAAKC,UAAUE,OAAO,uB,uBAMnC,WACIL,KAAKX,SAAS,CAAEI,yBAAyB,M,oBA6B7C,WACI,IAAMa,EAAmBX,cACzB,OACI,kBAAC,IAAMY,SAAP,KAEKP,KAAKN,wBAEJM,KAAKjB,aAAeuB,IAAqB,yBAAK5B,UAAU,sBACtD,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKA,UAAU,0BACP,kBAAC,IAAD,CAAK8B,GAAI,IACL,kBAAC,IAAD,CAAM9B,UAAU,IACZ,kBAAC,IAAD,CAAUA,UAAU,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK+B,GAAI,EAAG/B,UAAU,yBAEjBsB,KAAKD,MAAMT,WAAa,kBAAC,IAAD,MAEzB,yBAAKZ,UAAU,gBACX,uBAAGgC,KAAK,KACJ,yBAAKC,IAAKC,IAAMC,IAAI,GAAGC,OAAO,OAC9B,wBAAIpC,UAAU,wCAAd,YAIR,wBAAIA,UAAU,gBAAd,kBACA,uBAAGA,UAAU,wBAAb,kGAKCsB,KAAKlB,MAAMiC,OAAS,kBAAC,IAAD,CAAOC,MAAM,SAASC,SAAQjB,KAAKlB,MAAMiC,OAC1D,6BAAMf,KAAKlB,MAAMiC,QAGrB,kBAAC,SAAD,CAAQG,cAAelB,KAAKhB,kBAAmBN,UAAU,uBACrD,kBAAC,UAAD,CAASA,UAAU,IACf,kBAAC,IAAD,CAAOyC,IAAI,SAAX,iBACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBC,UAAU,WACvB,0BAAM1C,UAAU,oBACZ,kBAAC,IAAD,CAAMA,UAAU,gBAGxB,kBAAC,UAAD,CAAS2C,KAAK,OAAOC,KAAK,QAAQC,GAAG,QAAQC,YAAY,wBACrDC,MAAOzB,KAAKD,MAAM2B,MAAOC,UAAQ,KAGzC,kBAAC,aAAD,+BAIJ,kBAAC,IAAD,CAAWjD,UAAU,+BACjB,kBAAC,IAAD,CAAQsC,MAAM,UAAUtC,UAAU,aAAlC,aAKZ,kBAAC,IAAD,CAAK+B,GAAI,EAAG/B,UAAU,4BAClB,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,yBACX,uBAAGA,UAAU,iDAAb,qBACA,uBAAGA,UAAU,QAAb,oDACA,mDAUhC,kBAAC,IAAD,CAAKA,UAAU,QACX,kBAAC,IAAD,CAAKA,UAAU,sBACX,uBAAGA,UAAU,kBAAb,WAAsC,kBAAC,IAAD,CAAMkB,GAAG,iBAAiBlB,UAAU,sCAApC,mB,GArIzCE,aA+IdgD,wBAAU/C","file":"static/js/29.36ad2373.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.241a4139.png\";","import React, { Component } from 'react';\n\n/**\n * Renders the preloader\n */\nclass PreLoaderWidget extends Component {\n\n    render() {\n        return (\n            <div className=\"preloader\">\n                <div className=\"status\">\n                    <div className=\"spinner-border avatar-sm text-primary m-2\" role=\"status\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PreLoaderWidget;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom'\n\nimport { Container, Row, Col, Card, CardBody, FormGroup, Button, Alert, Label, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\nimport { Mail } from 'react-feather';\n\nimport { isUserAuthenticated } from '../../helpers/authUtils';\nimport Loader from '../../components/Loader';\nimport logo from '../../assets/images/logo.png';\n\nclass ForgetPassword extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.handleValidSubmit = this.handleValidSubmit.bind(this);\n        this.onDismiss = this.onDismiss.bind(this);\n        this.state = {\n            passwordResetSuccessful: false,\n            isLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        document.body.classList.add('authentication-bg');\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n        document.body.classList.remove('authentication-bg');\n    }\n\n    /**\n     * On error dismiss\n     */\n    onDismiss() {\n        this.setState({ passwordResetSuccessful: false });\n    }\n\n    /**\n     * Handles the submit\n     */\n    handleValidSubmit = (event, values) => {\n        console.log(values);\n        \n        this.setState({ isLoading: true });\n\n        // You can make actual api call to register here\n\n        window.setTimeout(() => {\n            this.setState({ isLoading: false, passwordResetSuccessful: true });\n        }, 1000)\n    }\n\n\n    /**\n     * Redirect to root\n     */\n    renderRedirectToRoot = () => {\n        const isAuthTokenValid = isUserAuthenticated();\n        if (isAuthTokenValid) {\n            return <Redirect to='/' />\n        }\n    }\n\n    render() {\n        const isAuthTokenValid = isUserAuthenticated();\n        return (\n            <React.Fragment>\n\n                {this.renderRedirectToRoot()}\n\n                {(this._isMounted || !isAuthTokenValid) && <div className=\"account-pages my-5\">\n                    <Container>\n                    <Row className=\"justify-content-center\">\n                            <Col xl={10}>\n                                <Card className=\"\">\n                                    <CardBody className=\"p-0\">\n                                        <Row>\n                                            <Col md={6} className=\"p-5 position-relative\">\n                                                { /* preloader */}\n                                                {this.state.isLoading && <Loader />}\n\n                                                <div className=\"mx-auto mb-5\">\n                                                    <a href=\"/\">\n                                                        <img src={logo} alt=\"\" height=\"24\" />\n                                                        <h3 className=\"d-inline align-middle ml-1 text-logo\">Shreyu</h3>\n                                                    </a>\n                                                </div>\n\n                                                <h6 className=\"h5 mb-0 mt-4\">Reset Password</h6>\n                                                <p className=\"text-muted mt-1 mb-4\">\n                                                    Enter your email address and we'll send you an email with instructions to reset your password.\n                                                </p>\n\n\n                                                {this.props.error && <Alert color=\"danger\" isOpen={this.props.error ? true : false}>\n                                                    <div>{this.props.error}</div>\n                                                </Alert>}\n\n                                                <AvForm onValidSubmit={this.handleValidSubmit} className=\"authentication-form\">\n                                                    <AvGroup className=\"\">\n                                                        <Label for=\"email\">Email Address</Label>\n                                                        <InputGroup>\n                                                            <InputGroupAddon addonType=\"prepend\">\n                                                                <span className=\"input-group-text\">\n                                                                    <Mail className=\"icon-dual\" />\n                                                                </span>\n                                                            </InputGroupAddon>\n                                                            <AvInput type=\"text\" name=\"email\" id=\"email\" placeholder=\"hello@coderthemes.com\" \n                                                                value={this.state.email} required />\n                                                        </InputGroup>\n                                                        \n                                                        <AvFeedback>This field is invalid</AvFeedback>\n                                                    </AvGroup>\n\n\n                                                    <FormGroup className=\"form-group mb-0 text-center\">\n                                                        <Button color=\"primary\" className=\"btn-block\">Submit</Button>\n                                                    </FormGroup>\n                                                </AvForm>\n                                            </Col>\n\n                                            <Col md={6} className=\"d-none d-md-inline-block\">\n                                                <div className=\"auth-page-sidebar\">\n                                                    <div className=\"overlay\"></div>\n                                                    <div className=\"auth-user-testimonial\">\n                                                        <p className=\"font-size-24 font-weight-bold text-white mb-1\">I simply love it!</p>\n                                                        <p className=\"lead\">\"It's a elegent templete. I love it very much!\"</p>\n                                                        <p>- Admin User</p>\n                                                    </div>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"mt-1\">\n                            <Col className=\"col-12 text-center\">\n                                <p className=\"texttext-muted\">Back to <Link to=\"/account/login\" className=\"text-primary font-weight-bold ml-1\">Login</Link></p>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default connect()(ForgetPassword);"],"sourceRoot":""}