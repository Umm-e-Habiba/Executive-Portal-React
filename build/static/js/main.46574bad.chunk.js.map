{"version":3,"sources":["redux/layout/constants.js","redux/appMenu/constants.js","constants/layout.js","redux/auth/actions.js","helpers/authUtils.js","redux/layout/actions.js","redux/appMenu/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","helpers/Backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/constants.js"],"names":["CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","loginUser","username","password","type","LOGIN_USER","payload","loginUserSuccess","user","LOGIN_USER_SUCCESS","loginUserFailed","error","LOGIN_USER_FAILED","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserFailed","REGISTER_USER_FAILED","logoutUser","history","LOGOUT_USER","forgetPasswordSuccess","passwordResetStatus","FORGET_PASSWORD_SUCCESS","forgetPasswordFailed","FORGET_PASSWORD_FAILED","isUserAuthenticated","getLoggedInUser","Cookies","get","JSON","parse","changeLayout","layout","changeLayoutWidth","width","changeSidebarTheme","theme","changeSidebarType","sidebarType","showRightSidebar","hideRightSidebar","initMenu","initMenuSuccess","menuItems","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","AuthLayout","React","lazy","VerticalLayout","HorizontalLayout","withLayout","WrappedComponent","HOC","getLayout","layoutCls","props","layoutType","layoutConstants","Layout","this","fallback","Component","connect","state","Login","Logout","ForgetPassword","KhyberCitySales","KhyberCityExpenses","KhyberCityPlots","KhyberCityCustomers","KhyberCityTransferRequests","KhyberCityDealers","KhyberCityEmployees","KhyberCityAttendance","PrivateRoute","component","roles","rest","render","to","pathname","from","location","loggedInUser","indexOf","role","rootRoute","path","exact","route","khyberCityRoutes","name","header","icon","FeatherIcon","authRoutes","children","Route","allRoutes","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","Routes","map","index","key","users","id","firstName","lastName","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","length","responseJson","token","ok","json","message","headers","Authorization","then","response","configureFakeBackend","App","Boolean","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","loading","Auth","REGISTER_USER","FORGET_PASSWORD","AppMenu","combineReducers","fetchJSON","options","status","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","call","put","fullname","email","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","uuid","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46574bad.chunk.js","sourcesContent":["/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\n\nexport const loginUser = (username, password) => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user) => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error) => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname, email, password) => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user) => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error) => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history) => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username) => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error) => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","import { Cookies } from 'react-cookie';\n\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    \n    if (!user) {\n        return false;\n    }\n\n    return true;\n};\n\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser };\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\n\nexport const changeLayout = (layout) => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width) => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme) => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType) => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = () => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = () => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = () => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\nexport const initMenu = () => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems) => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = () => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = React.lazy(() => import('../layouts/Auth'));\nconst VerticalLayout = React.lazy(() => import('../layouts/Vertical'));\nconst HorizontalLayout = React.lazy(() => import('../layouts/Horizontal'));\n\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent) => {\n    const HOC = class extends Component {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport * as FeatherIcon from \"react-feather\";\n\nimport { isUserAuthenticated, getLoggedInUser } from \"../helpers/authUtils\";\n\n// auth\nconst Login = React.lazy(() => import(\"../pages/auth/Login\"));\nconst Logout = React.lazy(() => import(\"../pages/auth/Logout\"));\nconst ForgetPassword = React.lazy(() => import(\"../pages/auth/ForgetPassword\"));\n\n// Khyber City\nconst KhyberCitySales = React.lazy(() => import(\"../pages/khyberCity/Sales/Sales\"));\nconst KhyberCityExpenses = React.lazy(() => import(\"../pages/khyberCity/Expenses/Expenses\"));\nconst KhyberCityPlots = React.lazy(() => import(\"../pages/khyberCity/Plots/Plots\"));\nconst KhyberCityCustomers = React.lazy(() => import(\"../pages/khyberCity/Customers/Customers\"));\nconst KhyberCityTransferRequests = React.lazy(() => import(\"../pages/khyberCity/TransferRequests/TransferRequests\"));\nconst KhyberCityDealers = React.lazy(() => import(\"../pages/khyberCity/Dealers/Dealers\"));\nconst KhyberCityEmployees = React.lazy(() => import(\"../pages/khyberCity/Employees/Employees\"));\nconst KhyberCityAttendance = React.lazy(() => import(\"../pages/khyberCity/Attendance/Attendance\"));\n\n// handle auth and authorization\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: \"/account/login\", state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: \"/\" }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: \"/\",\n    exact: true,\n    component: () => <Redirect to=\"/khyberCity/sales\" />,\n    route: PrivateRoute,\n};\n\n// Khyber City\nconst khyberCitySalesRoutes = {\n    path: \"/khyberCity/sales\",\n    name: \"Sales\",\n    header: \"Khyber City\",\n    icon: FeatherIcon.BarChart,\n    component: KhyberCitySales,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityExpensesRoutes = {\n    path: \"/khyberCity/expenses\",\n    name: \"Expenses\",\n    icon: FeatherIcon.DollarSign,\n    component: KhyberCityExpenses,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityPlotsRoutes = {\n    path: \"/khyberCity/plots\",\n    name: \"Plots\",\n    icon: FeatherIcon.Grid,\n    component: KhyberCityPlots,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityCustomersRoutes = {\n    path: \"/khyberCity/customers\",\n    name: \"Customers\",\n    icon: FeatherIcon.Users,\n    component: KhyberCityCustomers,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityTransferRequestsRoutes = {\n    path: \"/khyberCity/transferRequests\",\n    name: \"Transfer Requests\",\n    icon: FeatherIcon.RefreshCw,\n    component: KhyberCityTransferRequests,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityDealersRoutes = {\n    path: \"/khyberCity/dealers\",\n    name: \"Dealers\",\n    icon: FeatherIcon.Briefcase,\n    component: KhyberCityDealers,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityEmployeesRoutes = {\n    path: \"/khyberCity/employees\",\n    name: \"Employees\",\n    icon: FeatherIcon.User,\n    component: KhyberCityEmployees,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityAttendanceRoutes = {\n    path: \"/khyberCity/attendance\",\n    name: \"Attendance\",\n    icon: FeatherIcon.Calendar,\n    component: KhyberCityAttendance,\n    route: PrivateRoute,\n    roles: [\"Admin\"],\n};\n\nconst khyberCityRoutes = [\n    khyberCitySalesRoutes, \n    khyberCityExpensesRoutes, \n    khyberCityPlotsRoutes, \n    khyberCityCustomersRoutes, \n    khyberCityTransferRequestsRoutes,\n    khyberCityDealersRoutes,\n    khyberCityEmployeesRoutes,\n    khyberCityAttendanceRoutes,\n ];\n\n// auth\nconst authRoutes = {\n    path: \"/account\",\n    name: \"Auth\",\n    children: [\n        {\n            path: \"/account/login\",\n            name: \"Login\",\n            component: Login,\n            route: Route,\n        },\n        {\n            path: \"/account/logout\",\n            name: \"Logout\",\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: \"/account/forget-password\",\n            name: \"Forget Password\",\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== \"undefined\") {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n    rootRoute,\n    ...khyberCityRoutes, \n    authRoutes,\n];\n\nconst authProtectedRoutes = [ ...khyberCityRoutes ];\nconst allFlattenRoutes = flattenRoutes(allRoutes);\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'admin', password: 'gt327567ADMIN', firstName: 'Saif', lastName: 'Ur Rehman', role: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function(url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            role: 'Admin',\n                            token:\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4',\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Username or password is incorrect');\n                    }\n                    return;\n                }\n\n                // forget password\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username;\n                    });\n\n                    if (filteredUsers.length) {\n                        let responseJson = {\n                            message: \"We've sent you a link to reset password to your registered email.\",\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Sorry, we could not find any registered user with entered username');\n                    }\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (\n                        opts.headers &&\n                        opts.headers.Authorization ===\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4'\n                    ) {\n                        resolve({ ok: true, json: () => users });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n            }, 500);\n        });\n    };\n}\n","import React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\nimport { configureFakeBackend } from './helpers';\nimport './assets/scss/theme.scss';\n\nconfigureFakeBackend();\n\nclass App extends Component {\n\n  render() {\n    return <Routes></Routes>;\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\n\nconst Layout = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\n\nconst Auth = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\n\nconst AppMenu = (state = {}, action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\n\nimport { combineReducers } from 'redux';\nimport Layout from './layout/reducers';\nimport Auth from './auth/reducers';\nimport AppMenu from './appMenu/reducers';\n\nexport default combineReducers({\n    Auth,\n    AppMenu,\n    Layout,\n});\n","const fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems, parentId) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\nimport { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\nimport appMenuSaga from './appMenu/saga';\n\nexport default function* rootSaga(getState: any): any {\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n"],"sourceRoot":""}